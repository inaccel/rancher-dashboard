{"version":3,"file":"js/5262.aa6ac02a.js","mappings":"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","sources":["webpack://dashboard/./shell/pages/auth/verify.vue","webpack://dashboard/./shell/pages/auth/verify.vue?345a"],"sourcesContent":["<script>\nimport {\n  GITHUB_CODE, GITHUB_NONCE, BACK_TO, IS_SLO, _FLAGGED\n} from '@shell/config/query-params';\nimport { get } from '@shell/utils/object';\nimport { base64Decode } from '@shell/utils/crypto';\nimport loadPlugins from '@shell/plugins/plugin';\n\nconst samlProviders = ['ping', 'adfs', 'keycloak', 'okta', 'shibboleth'];\n\nfunction reply(err, code) {\n  try {\n    window.opener.window.onAuthTest(err, code);\n    setTimeout(() => {\n      window.close();\n    }, 250);\n  } catch (e) {\n    window.close();\n  }\n}\n\nfunction isSaml($route) {\n  const { query } = $route;\n  const configQuery = get(query, 'config');\n\n  return samlProviders.includes(configQuery);\n}\n\nexport default {\n  async fetch() {\n    const code = this.$route.query[GITHUB_CODE];\n    const stateStr = this.$route.query[GITHUB_NONCE];\n    const {\n      error, error_description: errorDescription, errorCode, errorMsg\n    } = this.$route.query;\n\n    if (error || errorDescription || errorCode || errorMsg) {\n      let out = errorDescription || error || errorCode;\n\n      if (this.isSlo) {\n        console.error('Failed to log out of auth provider', error, errorDescription, errorCode, errorMsg); // eslint-disable-line no-console\n\n        let out = this.$store.getters['i18n/withFallback'](`logout.specificError.unknown`);\n\n        if (errorCode) {\n          out = this.$store.getters['i18n/withFallback'](`logout.specificError.${ errorCode }`, null, out);\n        }\n\n        this.$router.replace(`/auth/login?${ IS_SLO }&err=${ escape(out) }`);\n\n        return;\n      } else {\n        if (errorMsg) {\n          out = this.$store.getters['i18n/withFallback'](`login.serverError.${ errorMsg }`, null, errorMsg);\n        }\n\n        this.$router.replace(`/auth/login?err=${ escape(out) }`);\n\n        return;\n      }\n    }\n\n    // check for existence of IS_SLO query param to differentiate between a login and a logout\n    if (this.isSlo) {\n      this.$store.dispatch('auth/uiLogout');\n\n      return;\n    }\n\n    let parsed;\n\n    try {\n      parsed = JSON.parse(base64Decode((stateStr)));\n    } catch (err) {\n      if (isSaml(this.$route)) {\n        // This is an ok failure. SAML has no state string so a failure is fine (see similar check in mounted).\n        // This whole file could be re-written with that in mind, but this change keeps things simple and fixes a breaking addition\n        return;\n      }\n      const out = this.$store.getters['i18n/t'](`login.error`);\n\n      console.error('Failed to parse nonce', stateStr, err); // eslint-disable-line no-console\n\n      this.$router.replace(`/auth/login?err=${ escape(out) }`);\n\n      return;\n    }\n\n    const { test, provider, nonce } = parsed;\n\n    if (test) {\n      return;\n    }\n\n    try {\n      const res = await this.$store.dispatch('auth/verifyOAuth', {\n        code,\n        nonce,\n        provider\n      });\n\n      if ( res._status === 200) {\n        const backTo = this.$route.query[BACK_TO] || '/';\n\n        // Load plugins\n        await loadPlugins({\n          app:     this.$store.app,\n          store:   this.$store,\n          $plugin: this.$store.$plugin\n        });\n\n        this.$router.replace(backTo);\n      } else {\n        this.$router.replace(`/auth/login?err=${ escape(res) }`);\n      }\n    } catch (err) {\n      this.$router.replace(`/auth/login?err=${ escape(err) }`);\n    }\n  },\n\n  data() {\n    const stateJSON = this.$route.query[GITHUB_NONCE] || '';\n\n    let parsed = {};\n\n    try {\n      parsed = JSON.parse(base64Decode(stateJSON));\n    } catch {\n    }\n\n    const { test } = parsed;\n\n    // Is Single Log Out\n    const isSlo = this.$route.query[IS_SLO] === _FLAGGED;\n\n    return {\n      testing: test,\n      isSlo\n    };\n  },\n\n  mounted() {\n    if ( this.testing ) {\n      try {\n        const {\n          error: respError, error_description: respErrorDescription, [GITHUB_CODE]: code, errorMsg\n        } = this.$route.query;\n\n        let error = respErrorDescription || respError || (!code ? 'No code supplied by auth provider' : null);\n\n        if (errorMsg) {\n          error = this.$store.getters['i18n/withFallback'](`login.serverError.${ errorMsg }`, null, errorMsg);\n        }\n\n        reply(error, code );\n      } catch (e) {\n        window.close();\n      }\n    } else {\n      if ( window.opener ) {\n        if (isSaml(this.$route)) {\n          if ( window.opener.window.onAuthTest ) {\n            reply(null, null);\n          } else {\n            reply({ err: 'failure' });\n          }\n        }\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <main class=\"main-layout\">\n    <h1 class=\"text-center mt-50\">\n      <span v-if=\"testing\">\n        Testing Configuration&hellip;\n      </span>\n      <span v-else-if=\"isSlo\">\n        Logging Out&hellip;\n      </span>\n      <span v-else>\n        Logging In&hellip;\n      </span>\n    </h1>\n  </main>\n</template>\n","import { render } from \"./verify.vue?vue&type=template&id=62ec753c\"\nimport script from \"./verify.vue?vue&type=script&lang=js\"\nexport * from \"./verify.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","samlProviders","reply","err","code","window","opener","onAuthTest","setTimeout","close","e","isSaml","$route","query","configQuery","get","includes","fetch","this","stateStr","error","error_description","errorDescription","errorCode","errorMsg","out","isSlo","console","$store","getters","$router","replace","escape","dispatch","parsed","JSON","parse","test","provider","nonce","res","_status","backTo","app","store","$plugin","data","stateJSON","testing","mounted","respError","respErrorDescription","__exports__","render"],"sourceRoot":""}