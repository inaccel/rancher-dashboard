{"version":3,"file":"js/5785.0c6743dc.js","mappings":"oMAoDE,QAAO,M,2BAhDT,MAAMA,EAAe,CAACC,EAAOC,KAC3B,IACE,OAAOD,EAAQC,EAAOC,QAAQF,GAAS,IACzC,CAAE,MAAOG,GACP,OAAO,IACT,GAGIC,EAAa,CAACJ,EAAOC,MAChBD,KAAWD,EAAaC,EAAOC,IAASI,SAASC,OAG5D,GACE,WAAAC,GACE,MAAMC,EAAeC,KAAKC,OAAOC,QAAQ,aAAa,EAAAC,gBAChDC,GAAc,QAAeJ,KAAKC,QAClCI,EAAkBL,KAAKC,OAAOC,QAAQ,mBACtCI,EAAgB,CAAEC,KAAM,QAG9B,GAAIH,EAAYI,cAAgBT,IAAiBM,EAC/C,OAAOL,KAAKS,QAAQC,QAAQJ,GAG9B,MAAMK,EAAwBX,KAAKC,OAAOC,QAAQ,yBAC5CU,EAActB,EAAaqB,EAAuBX,KAAKS,SAI7D,MAA8B,MAA1BG,GAAaC,SACRb,KAAKS,QAAQC,QAAQJ,GAI1BX,EAAWgB,EAAuBX,KAAKS,SAElCT,KAAKS,QAAQC,QAAQC,GAG1BhB,EAAWU,GAAiBS,gBAAiBd,KAAKS,SAC7CT,KAAKS,QAAQC,QAAQL,EAAgBS,iBAGvCd,KAAKS,QAAQC,QAAQJ,EAC9B,G,eC3CF,MAAMS,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,G","sources":["webpack://dashboard/./shell/pages/index.vue","webpack://dashboard/./shell/pages/index.vue?a9bf"],"sourcesContent":["<script>\nimport { SEEN_WHATS_NEW } from '@shell/store/prefs';\nimport { getVersionInfo } from '@shell/utils/version';\n\nconst resolveRoute = (route, router) => {\n  try {\n    return route ? router.resolve(route) : null;\n  } catch (e) {\n    return null;\n  }\n};\n\nconst validRoute = (route, router) => {\n  return !!route && !!resolveRoute(route, router)?.matched?.length;\n};\n\nexport default {\n  beforeMount() {\n    const seenWhatsNew = this.$store.getters['prefs/get'](SEEN_WHATS_NEW);\n    const versionInfo = getVersionInfo(this.$store);\n    const isSingleProduct = this.$store.getters['isSingleProduct'];\n    const dashboardHome = { name: 'home' };\n\n    // If this is a new version, then take the user to the home page to view the release notes\n    if (versionInfo.fullVersion !== seenWhatsNew && !isSingleProduct) {\n      return this.$router.replace(dashboardHome);\n    }\n\n    const afterLoginRouteObject = this.$store.getters['prefs/afterLoginRoute'];\n    const targetRoute = resolveRoute(afterLoginRouteObject, this.$router);\n\n    // If target route is /, then we will loop with endless redirect - so detect that here and\n    // redirect to /home, which is what we would do below, if there was no `afterLoginRouteObject`\n    if (targetRoute?.fullPath === '/') {\n      return this.$router.replace(dashboardHome);\n    }\n\n    // Confirm this is a valid route (it could have come from an uninstalled plugin)\n    if (validRoute(afterLoginRouteObject, this.$router)) {\n      // Take the user to the configured login route\n      return this.$router.replace(afterLoginRouteObject);\n    }\n\n    if (validRoute(isSingleProduct?.afterLoginRoute, this.$router)) {\n      return this.$router.replace(isSingleProduct.afterLoginRoute);\n    }\n\n    return this.$router.replace(dashboardHome);\n  }\n};\n</script>\n<template>\n  <div />\n</template>\n","import { render } from \"./index.vue?vue&type=template&id=24a4f334\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["resolveRoute","route","router","resolve","e","validRoute","matched","length","beforeMount","seenWhatsNew","this","$store","getters","SEEN_WHATS_NEW","versionInfo","isSingleProduct","dashboardHome","name","fullVersion","$router","replace","afterLoginRouteObject","targetRoute","fullPath","afterLoginRoute","__exports__","render"],"sourceRoot":""}