{"version":3,"file":"js/6049.a5045692.js","mappings":"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","sources":["webpack://dashboard/./shell/mixins/chart.js","webpack://dashboard/./shell/components/ChartHeading.vue","webpack://dashboard/./shell/components/ChartHeading.vue?c0d0","webpack://dashboard/./shell/pages/c/_cluster/gatekeeper/index.vue","webpack://dashboard/./shell/pages/c/_cluster/gatekeeper/index.vue?fbaf"],"sourcesContent":["\nimport { mapGetters } from 'vuex';\n\nimport {\n  REPO_TYPE, REPO, CHART, VERSION, NAMESPACE, NAME, DESCRIPTION as DESCRIPTION_QUERY, DEPRECATED as DEPRECATED_QUERY, HIDDEN, _FLAGGED, _CREATE, _EDIT\n} from '@shell/config/query-params';\nimport { CATALOG as CATALOG_ANNOTATIONS } from '@shell/config/labels-annotations';\nimport { SHOW_PRE_RELEASE, mapPref } from '@shell/store/prefs';\nimport { NAME as EXPLORER } from '@shell/config/product/explorer';\nimport { NAME as MANAGER } from '@shell/config/product/manager';\nimport { OPA_GATE_KEEPER_ID } from '@shell/pages/c/_cluster/gatekeeper/index.vue';\n\nimport { formatSi, parseSi } from '@shell/utils/units';\nimport { CAPI, CATALOG } from '@shell/config/types';\nimport { isPrerelease } from '@shell/utils/version';\nimport difference from 'lodash/difference';\nimport { LINUX } from '@shell/store/catalog';\nimport { clone } from '@shell/utils/object';\nimport { merge } from 'lodash';\n\nexport default {\n  data() {\n    return {\n      version:          null,\n      versionInfo:      null,\n      versionInfoError: null,\n      existing:         null,\n\n      ignoreWarning: false,\n\n      chart: null,\n    };\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster', 'isRancher']),\n\n    showPreRelease: mapPref(SHOW_PRE_RELEASE),\n\n    repo() {\n      return this.$store.getters['catalog/repo']({\n        repoType: this.query.repoType,\n        repoName: this.query.repoName,\n      });\n    },\n\n    showReadme() {\n      return !!this.versionInfo?.readme;\n    },\n\n    hasReadme() {\n      return !!this.versionInfo?.appReadme || !!this.versionInfo?.readme;\n    },\n\n    mappedVersions() {\n      const versions = this.chart?.versions || [];\n      const selectedVersion = this.targetVersion;\n      const OSs = this.currentCluster?.workerOSs;\n      const out = [];\n\n      versions.forEach((version) => {\n        const nue = {\n          label:           version.version,\n          version:         version.version,\n          originalVersion: version.version,\n          shortLabel:      version.version.length > 16 ? `${ version.version.slice(0, 15) }...` : version.version,\n          id:              version.version,\n          created:         version.created,\n          disabled:        false,\n          keywords:        version.keywords\n        };\n\n        const permittedSystems = (version?.annotations?.[CATALOG_ANNOTATIONS.PERMITTED_OS] || LINUX).split(',');\n\n        if (permittedSystems.length > 0 && difference(OSs, permittedSystems).length > 0) {\n          nue.disabled = true;\n        }\n        // if only one OS is allowed, show '<OS>-only' on hover\n        if (permittedSystems.length === 1) {\n          nue.label = this.t(`catalog.install.versions.${ permittedSystems[0] }`, { ver: version.version });\n        }\n\n        if (!this.showPreRelease && isPrerelease(version.version)) {\n          return;\n        }\n\n        out.push(nue);\n      });\n\n      const selectedMatch = out.find((v) => v.id === selectedVersion);\n\n      if (!selectedMatch) {\n        out.unshift({\n          label:           selectedVersion,\n          originalVersion: selectedVersion,\n          shortLabel:      selectedVersion.length > 16 ? `${ selectedVersion.slice(0, 15) }...` : selectedVersion,\n          id:              selectedVersion,\n          created:         null,\n          disabled:        false,\n          keywords:        []\n        });\n      }\n\n      const currentVersion = out.find((v) => v.originalVersion === this.currentVersion);\n\n      if (currentVersion) {\n        currentVersion.label = this.t('catalog.install.versions.current', { ver: this.currentVersion });\n      }\n\n      return out;\n    },\n\n    // Conditionally filter out prerelease versions of the chart.\n    filteredVersions() {\n      return this.showPreRelease ? this.mappedVersions : this.mappedVersions.filter((v) => !v.isPre);\n    },\n\n    query() {\n      const query = this.$route.query;\n\n      return {\n        repoType:     query[REPO_TYPE],\n        repoName:     query[REPO],\n        chartName:    query[CHART],\n        versionName:  query[VERSION],\n        appNamespace: query[NAMESPACE] || '',\n        appName:      query[NAME] || '',\n        description:  query[DESCRIPTION_QUERY],\n        hidden:       query[HIDDEN],\n        deprecated:   query[DEPRECATED_QUERY]\n      };\n    },\n\n    showDeprecated() {\n      return this.query.deprecated === 'true' || this.query.deprecated === _FLAGGED;\n    },\n\n    showHidden() {\n      return this.query.hidden === _FLAGGED;\n    },\n\n    // If the user is installing the app for the first time,\n    // warn them about CPU and memory requirements.\n    warnings() {\n      const warnings = [];\n\n      if ( this.existing ) {\n        // Ignore the limits on upgrade (or if asked by query) and don't show any warnings\n      } else {\n        // The UI will show warnings about CPU and memory if\n        // these annotations are added to Helm chart:\n        // - catalog.cattle.io/requests-cpu\n        // - catalog.cattle.io/requests-memory\n        const needCpu = parseSi(this.version?.annotations?.[CATALOG_ANNOTATIONS.REQUESTS_CPU] || '0');\n        const needMemory = parseSi(this.version?.annotations?.[CATALOG_ANNOTATIONS.REQUESTS_MEMORY] || '0');\n\n        // Note: These are null if unknown\n        const availableCpu = this.currentCluster?.availableCpu;\n        const availableMemory = this.currentCluster?.availableMemory;\n\n        if ( availableCpu !== null && availableCpu < needCpu ) {\n          warnings.push(this.t('catalog.install.error.insufficientCpu', {\n            need: Math.round(needCpu * 100) / 100,\n            have: Math.round(availableCpu * 100) / 100,\n          }));\n        }\n\n        if ( availableMemory !== null && availableMemory < needMemory ) {\n          warnings.push(this.t('catalog.install.error.insufficientMemory', {\n            need: formatSi(needMemory, {\n              increment: 1024, suffix: 'iB', firstSuffix: 'B'\n            }),\n            have: formatSi(availableMemory, {\n              increment: 1024, suffix: 'iB', firstSuffix: 'B'\n            }),\n          }));\n        }\n      }\n\n      if (this.chart?.id === OPA_GATE_KEEPER_ID) {\n        warnings.unshift(this.t('gatekeeperIndex.deprecated', {}, true));\n      }\n\n      if (this.existing && this.existing.upgradeAvailable === false) {\n        warnings.unshift(this.t('catalog.install.warning.managed', {\n          name:    this.existing.name,\n          version: this.chart ? this.query.versionName : null\n        }, true));\n      }\n\n      return warnings;\n    },\n\n    requires() {\n      const requires = [];\n\n      const required = (this.version?.annotations?.[CATALOG_ANNOTATIONS.REQUIRES_GVK] || '').split(/\\s*,\\s*/).filter((x) => !!x).reverse();\n\n      if ( required.length ) {\n        for ( const gvr of required ) {\n          if ( this.$store.getters['catalog/isInstalled']({ gvr }) ) {\n            continue;\n          }\n\n          const provider = this.provider(gvr);\n\n          if ( provider ) {\n            const url = this.$router.resolve(this.chartLocation(true, provider)).href;\n\n            requires.push(this.t('catalog.install.error.requiresFound', {\n              url,\n              name: provider.name\n            }, true));\n          } else {\n            requires.push(this.t('catalog.install.error.requiresMissing', { name: gvr }));\n          }\n        }\n      }\n\n      return requires;\n    },\n\n    currentVersion() {\n      return this.existing?.spec.chart.metadata.version;\n    },\n\n    targetVersion() {\n      return this.version ? this.version.version : this.query.versionName;\n    },\n\n    action() {\n      if (this.existing) {\n        return this.currentVersion === this.targetVersion ? 'update' : 'upgrade';\n      }\n\n      return 'install';\n    },\n\n    isChartTargeted() {\n      return this.chart?.targetNamespace && this.chart?.targetName;\n    },\n\n    hasQuestions() {\n      return this.versionInfo && !!this.versionInfo.questions;\n    },\n  },\n\n  methods: {\n    /**\n     * Populate `this.chart`\n     *\n     * `chart` used to be a computed property pointing at getter catalog/chart\n     *\n     * this however stopped recalculating given changes to the store\n     *\n     * (the store would populate a charts collection, which the getter uses to find the chart,\n     * however this did not kick off the computed property, so this.charts was not populated)\n     *\n     * Now we find and cache the chart\n     */\n    fetchStoreChart() {\n      if (!this.chart && this.repo && this.query.chartName) {\n        this.chart = this.$store.getters['catalog/chart']({\n          repoType:       this.query.repoType,\n          repoName:       this.query.repoName,\n          chartName:      this.query.chartName,\n          includeHidden:  true,\n          showDeprecated: this.showDeprecated\n        });\n      }\n\n      return this.chart;\n    },\n\n    async fetchChart() {\n      this.versionInfoError = null;\n\n      await this.$store.dispatch('catalog/load'); // not the problem\n\n      this.fetchStoreChart();\n\n      if ( this.query.appNamespace && this.query.appName ) {\n        // First check the URL query for an app name and namespace.\n        // Use those values to check for a catalog app resource.\n        // If found, set the form to edit mode. If not, set the\n        // form to create mode.\n\n        try {\n          this.existing = await this.$store.dispatch('cluster/find', {\n            type: CATALOG.APP,\n            id:   `${ this.query.appNamespace }/${ this.query.appName }`,\n          });\n\n          await this.existing?.fetchValues(true);\n\n          this.mode = _EDIT;\n        } catch (e) {\n          this.mode = _CREATE;\n          this.existing = null;\n        }\n      } else if ( this.chart?.targetNamespace && this.chart?.targetName ) {\n        // If the app name and namespace values are not provided in the\n        // query, fall back on target values defined in the Helm chart itself.\n\n        // Ask to install a special chart with fixed namespace/name\n        // or edit it if there's an existing install.\n\n        try {\n          this.existing = await this.$store.dispatch('cluster/find', {\n            type: CATALOG.APP,\n            id:   `${ this.chart.targetNamespace }/${ this.chart.targetName }`,\n          });\n          this.mode = _EDIT;\n        } catch (e) {\n          this.mode = _CREATE;\n          this.existing = null;\n        }\n      } else {\n        // Regular create\n\n        this.mode = _CREATE;\n      }\n\n      if ( !this.chart ) {\n        return;\n      }\n\n      // If no version is given in the URL query,\n      // use the first version provided by the Helm chart\n      // as the default.\n      if ( !this.query.versionName && this.chart.versions?.length ) {\n        if (this.showPreRelease) {\n          this.query.versionName = this.chart.versions[0].version;\n        } else {\n          const firstRelease = this.chart.versions.find((v) => !isPrerelease(v.version));\n\n          this.query.versionName = firstRelease?.version || this.chart.versions[0].version;\n        }\n      }\n\n      if ( !this.query.versionName ) {\n        return;\n      }\n\n      try {\n        this.version = this.$store.getters['catalog/version']({\n          repoType:    this.query.repoType,\n          repoName:    this.query.repoName,\n          chartName:   this.query.chartName,\n          versionName: this.query.versionName\n        });\n      } catch (e) {\n        console.error('Unable to fetch Version: ', e); // eslint-disable-line no-console\n      }\n      if (!this.version) {\n        console.warn('No version found: ', this.query.repoType, this.query.repoName, this.query.chartName, this.query.versionName);// eslint-disable-line no-console\n      }\n\n      try {\n        this.versionInfo = await this.$store.dispatch('catalog/getVersionInfo', {\n          repoType:    this.query.repoType,\n          repoName:    this.query.repoName,\n          chartName:   this.query.chartName,\n          versionName: this.query.versionName\n        });\n        // Here we set us versionInfo. The returned\n        // object contains everything all info\n        // about a currently installed app, and it has the\n        // following keys:\n        //\n        // - appReadme: A short overview of what the app does. This\n        //   forms the first few paragraphs of the chart info when\n        //   you install a Helm chart app through Rancher.\n        // - chart: Metadata about the Helm chart, including the\n        //   name and version.\n        // - readme: This is more detailed information that appears\n        //   under the heading \"Chart Information (Helm README)\" when\n        //   you install or upgrade a Helm chart app through Rancher,\n        //   below the app README.\n        // - values: All Helm chart values for the currently installed\n        //   app.\n      } catch (e) {\n        this.versionInfoError = e;\n\n        console.error('Unable to fetch VersionInfo: ', e); // eslint-disable-line no-console\n      }\n    }, // End of fetchChart\n\n    // Charts have an annotation that specifies any additional charts that should be installed at the same time eg CRDs\n    async fetchAutoInstallInfo() {\n      const out = [];\n      /*\n        An example value for auto is [\"rancher-monitoring-crd=match\"].\n        It is an array of chart names that lets Rancher know of other\n        charts that should be auto-installed at the same time.\n      */\n      const auto = (this.version?.annotations?.[CATALOG_ANNOTATIONS.AUTO_INSTALL] || '').split(/\\s*,\\s*/).filter((x) => !!x).reverse();\n\n      for ( const constraint of auto ) {\n        const provider = this.$store.getters['catalog/versionSatisfying']({\n          constraint,\n          repoName:     this.chart.repoName,\n          repoType:     this.chart.repoType,\n          chartVersion: this.version.version,\n        });\n        /* An example return value for \"provider\":\n          [\n              {\n                  \"name\": \"rancher-monitoring-crd\",\n                  \"version\": \"100.1.3+up19.0.3\",\n                  \"description\": \"Installs the CRDs for rancher-monitoring.\",\n                  \"apiVersion\": \"v1\",\n                  \"annotations\": {\n                      \"catalog.cattle.io/certified\": \"rancher\",\n                      \"catalog.cattle.io/hidden\": \"true\",\n                      \"catalog.cattle.io/namespace\": \"cattle-monitoring-system\",\n                      \"catalog.cattle.io/release-name\": \"rancher-monitoring-crd\"\n                  },\n                  \"type\": \"application\",\n                  \"urls\": [\n                      \"https://192.168.0.18:8005/k8s/clusters/c-m-hhpg69fv/v1/catalog.cattle.io.clusterrepos/rancher-charts?chartName=rancher-monitoring-crd&link=chart&version=100.1.3%2Bup19.0.3\"\n                  ],\n                  \"created\": \"2022-04-27T10:04:18.343124-07:00\",\n                  \"digest\": \"ecf07ba23a9cdaa7ffbbb14345d94ea1240b7f3b8e0ce9be4640e3e585c484e2\",\n                  \"key\": \"cluster/rancher-charts/rancher-monitoring-crd/100.1.3+up19.0.3\",\n                  \"repoType\": \"cluster\",\n                  \"repoName\": \"rancher-charts\"\n              }\n          ]\n          */\n\n        if ( provider ) {\n          try {\n            const crdVersionInfo = await this.$store.dispatch('catalog/getVersionInfo', {\n              repoType:    provider.repoType,\n              repoName:    provider.repoName,\n              chartName:   provider.name,\n              versionName: provider.version\n            });\n            let existingCRDApp;\n\n            // search for an existing crd app to track any non-default values used on the previous install/upgrade\n            if (this.mode === _EDIT) {\n              const targetNamespace = crdVersionInfo?.chart?.annotations?.[CATALOG_ANNOTATIONS.NAMESPACE];\n              const targetName = crdVersionInfo?.chart?.annotations?.[CATALOG_ANNOTATIONS.RELEASE_NAME];\n\n              if (targetName && targetNamespace) {\n                existingCRDApp = await this.$store.dispatch('cluster/find', {\n                  type: CATALOG.APP,\n                  id:   `${ targetNamespace }/${ targetName }`,\n                });\n              }\n            }\n            if (existingCRDApp) {\n              await existingCRDApp.fetchValues(true);\n\n              // spec.values are any non-default values the user configured\n              // the installation form should show these, as well as any default values from the chart\n              const existingValues = clone(existingCRDApp.values || {});\n              const defaultValues = clone(existingCRDApp.chartValues || {});\n\n              crdVersionInfo.existingValues = existingValues;\n              crdVersionInfo.allValues = merge(defaultValues, existingValues);\n            } else {\n              // allValues will potentially be updated in the UI - we want to track this separately from values to avoid mutating the chart object in the store\n              // this is similar to userValues for the main chart\n              crdVersionInfo.allValues = clone(crdVersionInfo.values);\n            }\n\n            out.push(crdVersionInfo);\n          } catch (e) {\n            console.error('Unable to fetch VersionInfo: ', e); // eslint-disable-line no-console\n          }\n        } else {\n          this.errors.push(`This chart requires ${ constraint } but no matching chart was found`);\n        }\n      }\n\n      this['autoInstallInfo'] = out;\n    },\n\n    selectVersion({ id: version }) {\n      this.$router.applyQuery({ [VERSION]: version });\n    },\n\n    provider(gvr) {\n      return this.$store.getters['catalog/versionProviding']({\n        gvr,\n        repoName: this.chart.repoName,\n        repoType: this.chart.repoType\n      });\n    },\n\n    /**\n     * Location of chart install or details page for either the current chart or from gvr\n     */\n    chartLocation(install = false, prov) {\n      const provider = prov || {\n        repoType: this.chart.repoType,\n        repoName: this.chart.repoName,\n        name:     this.chart.chartName,\n        version:  this.query.versionName,\n      };\n\n      return {\n        name:   install ? 'c-cluster-apps-charts-install' : 'c-cluster-apps-charts-chart',\n        params: {\n          cluster: this.$route.params.cluster,\n          product: this.$store.getters['productId'],\n        },\n        query: {\n          [REPO_TYPE]: provider.repoType,\n          [REPO]:      provider.repoName,\n          [CHART]:     provider.name,\n          [VERSION]:   provider.version,\n        }\n      };\n    },\n\n    appLocation() {\n      return this.existing?.detailLocation || {\n        name:   `c-cluster-product-resource`,\n        params: {\n          product:  this.$store.getters['productId'],\n          cluster:  this.$store.getters['clusterId'],\n          resource: CATALOG.APP,\n        }\n      };\n    },\n\n    clusterToolsLocation() {\n      return {\n        name:   `c-cluster-explorer-tools`,\n        params: {\n          product:  EXPLORER,\n          cluster:  this.$store.getters['clusterId'],\n          resource: CATALOG.APP,\n        }\n      };\n    },\n\n    clustersLocation() {\n      return {\n        name:   'c-cluster-product-resource',\n        params: {\n          cluster:  this.$route.params.cluster,\n          product:  MANAGER,\n          resource: CAPI.RANCHER_CLUSTER,\n        },\n      };\n    }\n  },\n\n};\n","<script>\nexport default {\n  props: {\n    label: {\n      type:     String,\n      required: true\n    },\n    url: {\n      type:     String,\n      required: true\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"chart-heading\">\n    <h1>{{ t('chartHeading.overview') }}</h1>\n    {{ t('chartHeading.poweredBy') }} <a\n      :href=\"url\"\n      rel=\"nofollow noopener noreferrer\"\n      target=\"_blank\"\n    >{{ label }}</a>\n  </div>\n</template>\n","import { render } from \"./ChartHeading.vue?vue&type=template&id=3fa1a3e2\"\nimport script from \"./ChartHeading.vue?vue&type=script&lang=js\"\nexport * from \"./ChartHeading.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\nimport ChartHeading from '@shell/components/ChartHeading';\nimport SortableTable from '@shell/components/SortableTable';\nimport { Banner } from '@components/Banner';\nimport { CONSTRAINT_VIOLATION_CONSTRAINT_LINK, CONSTRAINT_VIOLATION_COUNT, CONSTRAINT_VIOLATION_TEMPLATE_LINK } from '@shell/config/table-headers';\nimport { GATEKEEPER } from '@shell/config/types';\nimport Loading from '@shell/components/Loading';\n\nexport const OPA_GATE_KEEPER_ID = 'cluster/rancher-charts/rancher-gatekeeper';\n\nexport default {\n  components: {\n    ChartHeading, SortableTable, Banner, Loading\n  },\n  async fetch() {\n    const constraints = this.constraint ? [this.constraint] : await this.$store.dispatch('cluster/findAll', { type: GATEKEEPER.SPOOFED.CONSTRAINT });\n\n    this.violations = constraints\n      .map((constraint, i) => ({\n        id:             i,\n        constraintLink: {\n          text: constraint.nameDisplay,\n          to:   constraint.detailLocation\n        },\n        templateLink: {\n          text: constraint.kind,\n          to:   {\n            name:   'c-cluster-product-resource-id',\n            params: {\n              resource: 'templates.gatekeeper.sh.constrainttemplate', id: constraint.kind.toLowerCase(), product: 'gatekeeper'\n            }\n          }\n        },\n        count: constraint.totalViolations\n      }));\n  },\n  data(ctx) {\n    return {\n      headers: [\n        CONSTRAINT_VIOLATION_CONSTRAINT_LINK,\n        CONSTRAINT_VIOLATION_TEMPLATE_LINK,\n        CONSTRAINT_VIOLATION_COUNT\n      ],\n      violations: []\n    };\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else>\n    <ChartHeading\n      :label=\"t('gatekeeperIndex.poweredBy')\"\n      url=\"https://github.com/open-policy-agent/gatekeeper\"\n    />\n    <Banner color=\"warning\">\n      <span v-clean-html=\"t('gatekeeperIndex.deprecated', {}, true)\" />\n    </Banner>\n    <div class=\"spacer\" />\n    <div class=\"mb-10\">\n      <h2><t k=\"gatekeeperIndex.violations\" /></h2>\n    </div>\n    <div>\n      <SortableTable\n        :headers=\"headers\"\n        :rows=\"violations\"\n        :search=\"false\"\n        :table-actions=\"false\"\n        :row-actions=\"false\"\n        :paging=\"true\"\n        :rows-per-page=\"10\"\n        key-field=\"id\"\n        group-by=\"templateLink.text\"\n      />\n    </div>\n  </div>\n</template>\n","import { render } from \"./index.vue?vue&type=template&id=48f2469e\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["data","version","versionInfo","versionInfoError","existing","ignoreWarning","chart","computed","showPreRelease","mapPref","SHOW_PRE_RELEASE","repo","this","$store","getters","repoType","query","repoName","showReadme","readme","hasReadme","appReadme","mappedVersions","versions","selectedVersion","targetVersion","OSs","currentCluster","workerOSs","out","forEach","nue","label","originalVersion","shortLabel","length","slice","id","created","disabled","keywords","permittedSystems","annotations","PERMITTED_OS","LINUX","split","t","ver","push","selectedMatch","find","v","unshift","currentVersion","filteredVersions","filter","isPre","$route","chartName","versionName","appNamespace","appName","description","hidden","deprecated","showDeprecated","showHidden","warnings","needCpu","REQUESTS_CPU","needMemory","REQUESTS_MEMORY","availableCpu","availableMemory","need","Math","round","have","increment","suffix","firstSuffix","OPA_GATE_KEEPER_ID","upgradeAvailable","name","requires","required","REQUIRES_GVK","x","reverse","gvr","provider","url","$router","resolve","chartLocation","href","spec","metadata","action","isChartTargeted","targetNamespace","targetName","hasQuestions","questions","methods","fetchStoreChart","includeHidden","fetchChart","dispatch","type","APP","fetchValues","mode","e","firstRelease","console","error","warn","fetchAutoInstallInfo","auto","AUTO_INSTALL","constraint","chartVersion","crdVersionInfo","existingCRDApp","NAMESPACE","RELEASE_NAME","existingValues","clone","values","defaultValues","chartValues","allValues","merge","errors","selectVersion","applyQuery","install","prov","params","cluster","product","appLocation","detailLocation","resource","clusterToolsLocation","clustersLocation","RANCHER_CLUSTER","class","rel","target","props","String","__exports__","render","$fetchState","color","k","headers","rows","violations","search","paging","components","ChartHeading","SortableTable","Banner","Loading","fetch","constraints","SPOOFED","CONSTRAINT","map","i","constraintLink","text","nameDisplay","to","templateLink","kind","toLowerCase","count","totalViolations","ctx"],"sourceRoot":""}