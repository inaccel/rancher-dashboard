{"version":3,"sources":["webpack:///./node_modules/marked/lib/marked.umd.js","webpack:///./node_modules/dompurify/dist/purify.js"],"names":["exports","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_unsupportedIterableToArray","o","minLen","_arrayLikeToArray","n","toString","call","slice","constructor","name","Array","from","test","arr","len","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","Symbol","iterator","next","bind","isArray","done","value","TypeError","getDefaults","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","changeDefaults","newDefaults","defaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","replace","unescapeTest","unescape","_","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit","regex","opt","source","obj","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","e","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim","relativeBase","noopTest","exec","merge","arguments","hasOwnProperty","splitCells","tableRow","count","cells","match","offset","str","escaped","curr","split","trim","shift","pop","splice","push","c","invert","l","suffLen","currChar","findClosingBracket","b","level","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","outputLink","cap","link","raw","lexer","title","text","state","inLink","token","type","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","map","node","matchIndentInNode","join","Tokenizer","options","this","_proto","space","src","rules","block","newline","code","codeBlockStyle","fences","lang","heading","trimmed","depth","inline","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","trimLeft","search","nextBulletRegex","Math","min","hrRegex","fencesBeginRegex","task","checked","trimRight","top","spacers","filter","t","hasMultipleLineBreaks","every","_step","lineBreaks","_iterator","pre","def","tag","table","item","header","align","rows","j","k","row","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","rDelim","rLength","lLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","_text","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","create","inlineQueue","lex","lexInline","lastToken","cutSrc","lastParagraphClipped","_this","leading","tabs","repeat","some","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","error","Error","_this2","keepPrevChar","keys","includes","lastIndexOf","startInline","get","Renderer","_code","infostring","quote","_html","slugger","slug","body","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parse","parseInline","l2","l3","cell","itemBody","ret","renderers","parser","unshift","marked","callback","err","pending","setTimeout","_tokens","message","setOptions","use","_len","args","_key","hasExtensions","opts","apply","concat","childTokens","pack","ext","prevRenderer","_len2","_key2","_loop","prop","_len3","_key3","_loop2","prevTokenizer","_len4","_key4","_walkTokens","_loop3","_step2","_iterator2","_step3","_iterator3","_step4","_iterator4","_cell","factory","module","_toConsumableArray","setPrototypeOf","isFrozen","objectKeys","freeze","seal","_ref","Reflect","construct","fun","thisValue","x","Func","Function","arrayForEach","unapply","arrayIndexOf","arrayJoin","arrayPop","arrayPush","arraySlice","stringToLowerCase","stringMatch","stringReplace","stringIndexOf","stringTrim","regExpTest","regExpCreate","unconstruct","typeErrorCreate","func","thisArg","addToSet","set","array","element","lcElement","clone","object","newObject","property","svg","svgFilters","mathMl","html$1","svg$1","mathMl$1","xml","MUSTACHE_EXPR","ERB_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","_typeof","_toConsumableArray$1","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","document","createPolicy","suffix","ATTR_NAME","currentScript","hasAttribute","getAttribute","policyName","createHTML","html$$1","createDOMPurify","undefined","DOMPurify","root","version","removed","nodeType","isSupported","originalDocument","removeTitle","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","_window$NamedNodeMap","NamedNodeMap","MozNamedAttrMap","Text","Comment","DOMParser","template","createElement","ownerDocument","trustedTypesPolicy","emptyHTML","RETURN_TRUSTED_TYPE","_document","implementation","createNodeIterator","getElementsByTagName","createDocumentFragment","importNode","hooks","createHTMLDocument","documentMode","MUSTACHE_EXPR$$1","ERB_EXPR$$1","DATA_ATTR$$1","ARIA_ATTR$$1","IS_SCRIPT_OR_DATA$$1","ATTR_WHITESPACE$$1","IS_ALLOWED_URI$$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","SAFE_FOR_JQUERY","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_DOM_IMPORT","SANITIZE_DOM","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","CONFIG","formElement","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","tbody","_forceRemove","parentNode","removeChild","outerHTML","_removeAttribute","attribute","getAttributeNode","removeAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","firstElementChild","insertBefore","createTextNode","childNodes","querySelector","innerHTML","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","FILTER_ACCEPT","_isClobbered","elm","nodeName","textContent","attributes","setAttribute","namespaceURI","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","tagName","allowedTags","querySelectorAll","insertAdjacentHTML","htmlToInsert","cloneNode","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attr","idAttr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","_attr","forceKeepAttr","id","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","importedNode","oldNode","returnNode","toStaticHTML","appendChild","firstChild","nodeIterator","serializedHTML","setConfig","clearConfig","isValidAttribute","addHook","hookFunction","removeHook","removeHooks","removeAllHooks"],"mappings":"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","file":"1a83e5592a1ca6e6685f.js","sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.marked = {}));\n})(this, (function (exports) { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  function getDefaults() {\n    return {\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n  exports.defaults = getDefaults();\n  function changeDefaults(newDefaults) {\n    exports.defaults = newDefaults;\n  }\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n  /**\n   * @param {string} html\n   */\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n  var caret = /(^|[^\\[])\\^/g;\n  /**\n   * @param {string | RegExp} regex\n   * @param {string} opt\n   */\n\n  function edit(regex, opt) {\n    regex = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n  /**\n   * @param {boolean} sanitize\n   * @param {string} base\n   * @param {string} href\n   */\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n  /**\n   * @param {string} base\n   * @param {string} href\n   */\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0; // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n\n    if (!cells[0].trim()) {\n      cells.shift();\n    }\n\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n      cells.pop();\n    }\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  }\n  /**\n   * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n   * /c*$/ is vulnerable to REDOS.\n   *\n   * @param {string} str\n   * @param {string} c\n   * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n   */\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.slice(0, l - suffLen);\n  }\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n  /**\n   * @param {string} pattern\n   * @param {number} count\n   */\n\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  function outputLink(cap, link, raw, lexer) {\n    var href = link.href;\n    var title = link.title ? escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      lexer.state.inLink = true;\n      var token = {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text,\n        tokens: lexer.inlineTokens(text, [])\n      };\n      lexer.state.inLink = false;\n      return token;\n    }\n\n    return {\n      type: 'image',\n      raw: raw,\n      href: href,\n      title: title,\n      text: escape(text)\n    };\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap && cap[0].length > 0) {\n        return {\n          type: 'space',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text,\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          tokens: this.lexer.blockTokens(text, []),\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly;\n        var bull = cap[1].trim();\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: '',\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        };\n        bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n\n        if (this.options.pedantic) {\n          bull = isordered ? bull : '[*+-]';\n        } // Get next list item\n\n\n        var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))\"); // Check if current bullet point can start a new List Item\n\n        while (src) {\n          endEarly = false;\n\n          if (!(cap = itemRegex.exec(src))) {\n            break;\n          }\n\n          if (this.rules.block.hr.test(src)) {\n            // End list if bullet was actually HR (possibly move into itemRegex?)\n            break;\n          }\n\n          raw = cap[0];\n          src = src.substring(raw.length);\n          line = cap[2].split('\\n', 1)[0];\n          nextLine = src.split('\\n', 1)[0];\n\n          if (this.options.pedantic) {\n            indent = 2;\n            itemContents = line.trimLeft();\n          } else {\n            indent = cap[2].search(/[^ ]/); // Find first non-space char\n\n            indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n\n            itemContents = line.slice(indent);\n            indent += cap[1].length;\n          }\n\n          blankLine = false;\n\n          if (!line && /^ *$/.test(nextLine)) {\n            // Items begin with at most one blank line\n            raw += nextLine + '\\n';\n            src = src.substring(nextLine.length + 1);\n            endEarly = true;\n          }\n\n          if (!endEarly) {\n            var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])((?: [^\\\\n]*)?(?:\\\\n|$))\");\n            var hrRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)\");\n            var fencesBeginRegex = new RegExp(\"^( {0,\" + Math.min(3, indent - 1) + \"})(```|~~~)\"); // Check if following lines should be included in List Item\n\n            while (src) {\n              rawLine = src.split('\\n', 1)[0];\n              line = rawLine; // Re-align to follow commonmark nesting rules\n\n              if (this.options.pedantic) {\n                line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n              } // End list item if found code fences\n\n\n              if (fencesBeginRegex.test(line)) {\n                break;\n              } // End list item if found start of new heading\n\n\n              if (this.rules.block.heading.test(line)) {\n                break;\n              } // End list item if found start of new bullet\n\n\n              if (nextBulletRegex.test(line)) {\n                break;\n              } // Horizontal rule found\n\n\n              if (hrRegex.test(src)) {\n                break;\n              }\n\n              if (line.search(/[^ ]/) >= indent || !line.trim()) {\n                // Dedent if possible\n                itemContents += '\\n' + line.slice(indent);\n              } else if (!blankLine) {\n                // Until blank line, item doesn't need indentation\n                itemContents += '\\n' + line;\n              } else {\n                // Otherwise, improper indentation ends this item\n                break;\n              }\n\n              if (!blankLine && !line.trim()) {\n                // Check if current line is blank\n                blankLine = true;\n              }\n\n              raw += rawLine + '\\n';\n              src = src.substring(rawLine.length + 1);\n            }\n          }\n\n          if (!list.loose) {\n            // If the previous item ended with a blank line, the list is loose\n            if (endsWithBlankLine) {\n              list.loose = true;\n            } else if (/\\n *\\n *$/.test(raw)) {\n              endsWithBlankLine = true;\n            }\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.exec(itemContents);\n\n            if (istask) {\n              ischecked = istask[0] !== '[ ] ';\n              itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: !!istask,\n            checked: ischecked,\n            loose: false,\n            text: itemContents\n          });\n          list.raw += raw;\n        } // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n\n\n        list.items[list.items.length - 1].raw = raw.trimRight();\n        list.items[list.items.length - 1].text = itemContents.trimRight();\n        list.raw = list.raw.trimRight();\n        var l = list.items.length; // Item child tokens handled here at end because we needed to have the final item to trim it first\n\n        for (i = 0; i < l; i++) {\n          this.lexer.state.top = false;\n          list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n          var spacers = list.items[i].tokens.filter(function (t) {\n            return t.type === 'space';\n          });\n          var hasMultipleLineBreaks = spacers.every(function (t) {\n            var chars = t.raw.split('');\n            var lineBreaks = 0;\n\n            for (var _iterator = _createForOfIteratorHelperLoose(chars), _step; !(_step = _iterator()).done;) {\n              var _char = _step.value;\n\n              if (_char === '\\n') {\n                lineBreaks += 1;\n              }\n\n              if (lineBreaks > 1) {\n                return true;\n              }\n            }\n\n            return false;\n          });\n\n          if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n            // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n            list.loose = true;\n            list.items[i].loose = true;\n          }\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        };\n\n        if (this.options.sanitize) {\n          token.type = 'paragraph';\n          token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n          token.tokens = [];\n          this.lexer.inline(token.text, token.tokens);\n        }\n\n        return token;\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1]).map(function (c) {\n            return {\n              text: c\n            };\n          }),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i, j, k, row;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.rows.length;\n\n          for (i = 0; i < l; i++) {\n            item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n              return {\n                text: c\n              };\n            });\n          } // parse child tokens inside headers and cells\n          // header child tokens\n\n\n          l = item.header.length;\n\n          for (j = 0; j < l; j++) {\n            item.header[j].tokens = [];\n            this.lexer.inline(item.header[j].text, item.header[j].tokens);\n          } // cell child tokens\n\n\n          l = item.rows.length;\n\n          for (j = 0; j < l; j++) {\n            row = item.rows[j];\n\n            for (k = 0; k < row.length; k++) {\n              row[k].tokens = [];\n              this.lexer.inline(row[k].text, row[k].tokens);\n            }\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.escape = function escape$1(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n          this.lexer.state.inLink = true;\n        } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.lexer.state.inLink = false;\n        }\n\n        if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = true;\n        } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: this.lexer.state.inLink,\n          inRawBlock: this.lexer.state.inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0], this.lexer);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0], this.lexer);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDF70-\\uDF81\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE70-\\uDEBE\\uDEC0-\\uDEC9\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)\n\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // Remove extra characters. *a*** -> *a*\n\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***\n\n          if (Math.min(lLength, rLength) % 2) {\n            var _text = src.slice(1, lLength + match.index + rLength);\n\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: _text,\n              tokens: this.lexer.inlineTokens(_text, [])\n            };\n          } // Create 'strong' if smallest delimiter has even char count. **a***\n\n\n          var text = src.slice(2, lLength + match.index + rLength - 1);\n          return {\n            type: 'strong',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text: text,\n            tokens: this.lexer.inlineTokens(text, [])\n          };\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2],\n          tokens: this.lexer.inlineTokens(cap[2], [])\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (this.lexer.state.inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        } else {\n          text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.listItemStart = edit(/^( *)(bull) */).replace('bull', block.bullet).getRegex();\n  block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '').replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.table = edit(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge({}, block.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n    nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //          () Skip orphan inside strong  () Consume to delim (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[^*]+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit(inline.reflink).replace('label', inline._label).replace('ref', block._label).getRegex();\n  inline.nolink = edit(inline.nolink).replace('ref', block._label).getRegex();\n  inline.reflinkSearch = edit(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n\n  /**\n   * smartypants text replacement\n   * @param {string} text\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   * @param {string} text\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || exports.defaults;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      this.tokenizer.lexer = this;\n      this.inlineQueue = [];\n      this.state = {\n        inLink: false,\n        inRawBlock: false,\n        top: true\n      };\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n');\n      this.blockTokens(src, this.tokens);\n      var next;\n\n      while (next = this.inlineQueue.shift()) {\n        this.inlineTokens(next.src, next.tokens);\n      }\n\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens) {\n      var _this = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n      } else {\n        src = src.replace(/^( *)(\\t+)/gm, function (_, leading, tabs) {\n          return leading + '    '.repeat(tabs.length);\n        });\n      }\n\n      var token, lastToken, cutSrc, lastParagraphClipped;\n\n      while (src) {\n        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // newline\n\n\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.length === 1 && tokens.length > 0) {\n            // if there's a single \\n as a spacer, it's terminating the last line,\n            // so move it there so that we don't get unecessary paragraph tags\n            tokens[tokens.length - 1].raw += '\\n';\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (token = this.tokenizer.def(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.raw;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startBlock) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      this.state.top = true;\n      return tokens;\n    };\n\n    _proto.inline = function inline(src, tokens) {\n      this.inlineQueue.push({\n        src: src,\n        tokens: tokens\n      });\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens) {\n      var _this2 = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // extensions\n\n        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this2\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // escape\n\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startInline) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  /**\n   * Renderer\n   */\n\n  var Renderer = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n    }\n    /**\n     * @param {string} quote\n     */\n    ;\n\n    _proto.blockquote = function blockquote(quote) {\n      return \"<blockquote>\\n\" + quote + \"</blockquote>\\n\";\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    }\n    /**\n     * @param {string} text\n     * @param {string} level\n     * @param {string} raw\n     * @param {any} slugger\n     */\n    ;\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        var id = this.options.headerPrefix + slugger.slug(raw);\n        return \"<h\" + level + \" id=\\\"\" + id + \"\\\">\" + text + \"</h\" + level + \">\\n\";\n      } // ignore IDs\n\n\n      return \"<h\" + level + \">\" + text + \"</h\" + level + \">\\n\";\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.listitem = function listitem(text) {\n      return \"<li>\" + text + \"</li>\\n\";\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.paragraph = function paragraph(text) {\n      return \"<p>\" + text + \"</p>\\n\";\n    }\n    /**\n     * @param {string} header\n     * @param {string} body\n     */\n    ;\n\n    _proto.table = function table(header, body) {\n      if (body) body = \"<tbody>\" + body + \"</tbody>\";\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    }\n    /**\n     * @param {string} content\n     */\n    ;\n\n    _proto.tablerow = function tablerow(content) {\n      return \"<tr>\\n\" + content + \"</tr>\\n\";\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? \"<\" + type + \" align=\\\"\" + flags.align + \"\\\">\" : \"<\" + type + \">\";\n      return tag + content + (\"</\" + type + \">\\n\");\n    }\n    /**\n     * span level renderer\n     * @param {string} text\n     */\n    ;\n\n    _proto.strong = function strong(text) {\n      return \"<strong>\" + text + \"</strong>\";\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.em = function em(text) {\n      return \"<em>\" + text + \"</em>\";\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.codespan = function codespan(text) {\n      return \"<code>\" + text + \"</code>\";\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.del = function del(text) {\n      return \"<del>\" + text + \"</del>\";\n    }\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */\n    ;\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    }\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */\n    ;\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = \"<img src=\\\"\" + href + \"\\\" alt=\\\"\" + text + \"\\\"\";\n\n      if (title) {\n        out += \" title=\\\"\" + title + \"\\\"\";\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n    /**\n     * @param {string} value\n     */\n\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     * @param {string} originalSlug\n     * @param {boolean} isDryRun\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} [options]\n     * @param {boolean} [options.dryrun] Generates the next unique slug without\n     * updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || exports.defaults;\n      this.options.renderer = this.options.renderer || new Renderer();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer();\n      this.slugger = new Slugger();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.rows.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.rows[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = exports.defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var opts = merge.apply(void 0, [{}].concat(args));\n    var extensions = marked.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    var hasExtensions;\n    args.forEach(function (pack) {\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        hasExtensions = true;\n        pack.extensions.forEach(function (ext) {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n\n          if (ext.renderer) {\n            // Renderer extensions\n            var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function () {\n                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n\n                var ret = ext.renderer.apply(this, args);\n\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n\n          if (ext.tokenizer) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n\n          if (ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n      } // ==-- Parse \"overwrite\" extensions --== //\n\n\n      if (pack.renderer) {\n        (function () {\n          var renderer = marked.defaults.renderer || new Renderer();\n\n          var _loop = function _loop(prop) {\n            var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false\n\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n\n              var ret = pack.renderer[prop].apply(renderer, args);\n\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.renderer) {\n            _loop(prop);\n          }\n\n          opts.renderer = renderer;\n        })();\n      }\n\n      if (pack.tokenizer) {\n        (function () {\n          var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n          var _loop2 = function _loop2(prop) {\n            var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false\n\n            tokenizer[prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n\n              var ret = pack.tokenizer[prop].apply(tokenizer, args);\n\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.tokenizer) {\n            _loop2(prop);\n          }\n\n          opts.tokenizer = tokenizer;\n        })();\n      } // ==-- Parse WalkTokens extensions --== //\n\n\n      if (pack.walkTokens) {\n        var _walkTokens = marked.defaults.walkTokens;\n\n        opts.walkTokens = function (token) {\n          pack.walkTokens.call(this, token);\n\n          if (_walkTokens) {\n            _walkTokens.call(this, token);\n          }\n        };\n      }\n\n      if (hasExtensions) {\n        opts.extensions = extensions;\n      }\n\n      marked.setOptions(opts);\n    });\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    var _loop3 = function _loop3() {\n      var token = _step.value;\n      callback.call(marked, token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell.tokens, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell.tokens, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n              // Walk any extensions\n              marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                marked.walkTokens(token[childTokens], callback);\n              });\n            } else if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      _loop3();\n    }\n  };\n  /**\n   * Parse Inline\n   * @param {string} src\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var options = marked.options;\n  var setOptions = marked.setOptions;\n  var use = marked.use;\n  var walkTokens = marked.walkTokens;\n  var parseInline = marked.parseInline;\n  var parse = marked;\n  var parser = Parser.parse;\n  var lexer = Lexer.lex;\n\n  exports.Lexer = Lexer;\n  exports.Parser = Parser;\n  exports.Renderer = Renderer;\n  exports.Slugger = Slugger;\n  exports.TextRenderer = TextRenderer;\n  exports.Tokenizer = Tokenizer;\n  exports.getDefaults = getDefaults;\n  exports.lexer = lexer;\n  exports.marked = marked;\n  exports.options = options;\n  exports.parse = parse;\n  exports.parseInline = parseInline;\n  exports.parser = parser;\n  exports.setOptions = setOptions;\n  exports.use = use;\n  exports.walkTokens = walkTokens;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","/*! @license DOMPurify | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.0.8/LICENSE */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.DOMPurify = factory());\n}(this, function () { 'use strict';\n\n  function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n  var hasOwnProperty = Object.hasOwnProperty,\n      setPrototypeOf = Object.setPrototypeOf,\n      isFrozen = Object.isFrozen,\n      objectKeys = Object.keys;\n  var freeze = Object.freeze,\n      seal = Object.seal; // eslint-disable-line import/no-mutable-exports\n\n  var _ref = typeof Reflect !== 'undefined' && Reflect,\n      apply = _ref.apply,\n      construct = _ref.construct;\n\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return new (Function.prototype.bind.apply(Func, [null].concat(_toConsumableArray(args))))();\n    };\n  }\n\n  var arrayForEach = unapply(Array.prototype.forEach);\n  var arrayIndexOf = unapply(Array.prototype.indexOf);\n  var arrayJoin = unapply(Array.prototype.join);\n  var arrayPop = unapply(Array.prototype.pop);\n  var arrayPush = unapply(Array.prototype.push);\n  var arraySlice = unapply(Array.prototype.slice);\n\n  var stringToLowerCase = unapply(String.prototype.toLowerCase);\n  var stringMatch = unapply(String.prototype.match);\n  var stringReplace = unapply(String.prototype.replace);\n  var stringIndexOf = unapply(String.prototype.indexOf);\n  var stringTrim = unapply(String.prototype.trim);\n\n  var regExpTest = unapply(RegExp.prototype.test);\n  var regExpCreate = unconstruct(RegExp);\n\n  var typeErrorCreate = unconstruct(TypeError);\n\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return apply(func, thisArg, args);\n    };\n  }\n\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return construct(func, args);\n    };\n  }\n\n  /* Add properties to a lookup table */\n  function addToSet(set, array) {\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n\n    var l = array.length;\n    while (l--) {\n      var element = array[l];\n      if (typeof element === 'string') {\n        var lcElement = stringToLowerCase(element);\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n\n          element = lcElement;\n        }\n      }\n\n      set[element] = true;\n    }\n\n    return set;\n  }\n\n  /* Shallow clone an object */\n  function clone(object) {\n    var newObject = {};\n\n    var property = void 0;\n    for (property in object) {\n      if (apply(hasOwnProperty, object, [property])) {\n        newObject[property] = object[property];\n      }\n    }\n\n    return newObject;\n  }\n\n  var html = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\n\n  // SVG\n  var svg = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'audio', 'canvas', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'video', 'view', 'vkern']);\n\n  var svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n\n  var mathMl = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover']);\n\n  var text = freeze(['#text']);\n\n  var html$1 = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns']);\n\n  var svg$1 = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'tabindex', 'targetx', 'targety', 'transform', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n\n  var mathMl$1 = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n\n  var xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n  // eslint-disable-next-line unicorn/better-regex\n  var MUSTACHE_EXPR = seal(/\\{\\{[\\s\\S]*|[\\s\\S]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n  var ERB_EXPR = seal(/<%[\\s\\S]*|[\\s\\S]*%>/gm);\n  var DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n  var ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n  var IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n  var IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  var ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g // eslint-disable-line no-control-regex\n  );\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n  function _toConsumableArray$1(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n  var getGlobal = function getGlobal() {\n    return typeof window === 'undefined' ? null : window;\n  };\n\n  /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n   * @param {Document} document The document object (to determine policy name suffix)\n   * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n   * are not supported).\n   */\n  var _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\n    if ((typeof trustedTypes === 'undefined' ? 'undefined' : _typeof(trustedTypes)) !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    }\n\n    // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n    var suffix = null;\n    var ATTR_NAME = 'data-tt-policy-suffix';\n    if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\n      suffix = document.currentScript.getAttribute(ATTR_NAME);\n    }\n\n    var policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML: function createHTML(html$$1) {\n          return html$$1;\n        }\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n\n  function createDOMPurify() {\n    var window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n    var DOMPurify = function DOMPurify(root) {\n      return createDOMPurify(root);\n    };\n\n    /**\n     * Version label, exposed for easier checks\n     * if DOMPurify is up to date or not\n     */\n    DOMPurify.version = '2.0.12';\n\n    /**\n     * Array of elements that DOMPurify removed during sanitation.\n     * Empty if nothing was removed.\n     */\n    DOMPurify.removed = [];\n\n    if (!window || !window.document || window.document.nodeType !== 9) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n\n      return DOMPurify;\n    }\n\n    var originalDocument = window.document;\n    var removeTitle = false;\n\n    var document = window.document;\n    var DocumentFragment = window.DocumentFragment,\n        HTMLTemplateElement = window.HTMLTemplateElement,\n        Node = window.Node,\n        NodeFilter = window.NodeFilter,\n        _window$NamedNodeMap = window.NamedNodeMap,\n        NamedNodeMap = _window$NamedNodeMap === undefined ? window.NamedNodeMap || window.MozNamedAttrMap : _window$NamedNodeMap,\n        Text = window.Text,\n        Comment = window.Comment,\n        DOMParser = window.DOMParser,\n        trustedTypes = window.trustedTypes;\n\n    // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n\n    if (typeof HTMLTemplateElement === 'function') {\n      var template = document.createElement('template');\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n\n    var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);\n    var emptyHTML = trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML('') : '';\n\n    var _document = document,\n        implementation = _document.implementation,\n        createNodeIterator = _document.createNodeIterator,\n        getElementsByTagName = _document.getElementsByTagName,\n        createDocumentFragment = _document.createDocumentFragment;\n    var importNode = originalDocument.importNode;\n\n\n    var hooks = {};\n\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n    DOMPurify.isSupported = implementation && typeof implementation.createHTMLDocument !== 'undefined' && document.documentMode !== 9;\n\n    var MUSTACHE_EXPR$$1 = MUSTACHE_EXPR,\n        ERB_EXPR$$1 = ERB_EXPR,\n        DATA_ATTR$$1 = DATA_ATTR,\n        ARIA_ATTR$$1 = ARIA_ATTR,\n        IS_SCRIPT_OR_DATA$$1 = IS_SCRIPT_OR_DATA,\n        ATTR_WHITESPACE$$1 = ATTR_WHITESPACE;\n    var IS_ALLOWED_URI$$1 = IS_ALLOWED_URI;\n\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n\n    /* allowed element names */\n\n    var ALLOWED_TAGS = null;\n    var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(html), _toConsumableArray$1(svg), _toConsumableArray$1(svgFilters), _toConsumableArray$1(mathMl), _toConsumableArray$1(text)));\n\n    /* Allowed attribute names */\n    var ALLOWED_ATTR = null;\n    var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray$1(html$1), _toConsumableArray$1(svg$1), _toConsumableArray$1(mathMl$1), _toConsumableArray$1(xml)));\n\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n    var FORBID_TAGS = null;\n\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n    var FORBID_ATTR = null;\n\n    /* Decide if ARIA attributes are okay */\n    var ALLOW_ARIA_ATTR = true;\n\n    /* Decide if custom data attributes are okay */\n    var ALLOW_DATA_ATTR = true;\n\n    /* Decide if unknown protocols are okay */\n    var ALLOW_UNKNOWN_PROTOCOLS = false;\n\n    /* Output should be safe for jQuery's $() factory? */\n    var SAFE_FOR_JQUERY = false;\n\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n    var SAFE_FOR_TEMPLATES = false;\n\n    /* Decide if document with <html>... should be returned */\n    var WHOLE_DOCUMENT = false;\n\n    /* Track whether config is already set on this instance of DOMPurify. */\n    var SET_CONFIG = false;\n\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n    var FORCE_BODY = false;\n\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n    var RETURN_DOM = false;\n\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n    var RETURN_DOM_FRAGMENT = false;\n\n    /* If `RETURN_DOM` or `RETURN_DOM_FRAGMENT` is enabled, decide if the returned DOM\n     * `Node` is imported into the current `Document`. If this flag is not enabled the\n     * `Node` will belong (its ownerDocument) to a fresh `HTMLDocument`, created by\n     * DOMPurify. */\n    var RETURN_DOM_IMPORT = false;\n\n    /* Try to return a Trusted Type object instead of a string, retrun a string in\n     * case Trusted Types are not supported  */\n    var RETURN_TRUSTED_TYPE = false;\n\n    /* Output should be free from DOM clobbering attacks? */\n    var SANITIZE_DOM = true;\n\n    /* Keep element content when removing element? */\n    var KEEP_CONTENT = true;\n\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */\n    var IN_PLACE = false;\n\n    /* Allow usage of profiles like html, svg and mathMl */\n    var USE_PROFILES = {};\n\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n    var FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n\n    /* Tags that are safe for data: URIs */\n    var DATA_URI_TAGS = null;\n    var DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n\n    /* Attributes safe for values like \"javascript:\" */\n    var URI_SAFE_ATTRIBUTES = null;\n    var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'summary', 'title', 'value', 'style', 'xmlns']);\n\n    /* Keep a reference to config to pass to hooks */\n    var CONFIG = null;\n\n    /* Ideally, do not touch anything below this line */\n    /* ______________________________________________ */\n\n    var formElement = document.createElement('form');\n\n    /**\n     * _parseConfig\n     *\n     * @param  {Object} cfg optional config literal\n     */\n    // eslint-disable-next-line complexity\n    var _parseConfig = function _parseConfig(cfg) {\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n\n      /* Shield configuration object from tampering */\n      if (!cfg || (typeof cfg === 'undefined' ? 'undefined' : _typeof(cfg)) !== 'object') {\n        cfg = {};\n      }\n\n      /* Set configuration parameters */\n      ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR) : DEFAULT_ALLOWED_ATTR;\n      URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR) : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS) : DEFAULT_DATA_URI_TAGS;\n      FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS) : {};\n      FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR) : {};\n      USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n      SAFE_FOR_JQUERY = cfg.SAFE_FOR_JQUERY || false; // Default false\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n      RETURN_DOM_IMPORT = cfg.RETURN_DOM_IMPORT || false; // Default false\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n      IS_ALLOWED_URI$$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$$1;\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n\n      /* Parse profile info */\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray$1(text)));\n        ALLOWED_ATTR = [];\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html);\n          addToSet(ALLOWED_ATTR, html$1);\n        }\n\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg);\n          addToSet(ALLOWED_ATTR, svg$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl);\n          addToSet(ALLOWED_ATTR, mathMl$1);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n\n      /* Merge configuration parameters */\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS);\n      }\n\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR);\n      }\n\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR);\n      }\n\n      /* Add #text in case KEEP_CONTENT is set to true */\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      }\n\n      // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n      if (freeze) {\n        freeze(cfg);\n      }\n\n      CONFIG = cfg;\n    };\n\n    /**\n     * _forceRemove\n     *\n     * @param  {Node} node a DOM node\n     */\n    var _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, { element: node });\n      try {\n        // eslint-disable-next-line unicorn/prefer-node-remove\n        node.parentNode.removeChild(node);\n      } catch (_) {\n        node.outerHTML = emptyHTML;\n      }\n    };\n\n    /**\n     * _removeAttribute\n     *\n     * @param  {String} name an Attribute name\n     * @param  {Node} node a DOM node\n     */\n    var _removeAttribute = function _removeAttribute(name, node) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: node.getAttributeNode(name),\n          from: node\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: node\n        });\n      }\n\n      node.removeAttribute(name);\n    };\n\n    /**\n     * _initDocument\n     *\n     * @param  {String} dirty a string of dirty markup\n     * @return {Document} a DOM, filled with the dirty markup\n     */\n    var _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      var doc = void 0;\n      var leadingWhitespace = void 0;\n\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        var matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n\n      var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /* Use the DOMParser API by default, fallback later if needs be */\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, 'text/html');\n      } catch (_) {}\n\n      /* Remove title to fix a mXSS bug in older MS Edge */\n      if (removeTitle) {\n        addToSet(FORBID_TAGS, ['title']);\n      }\n\n      /* Use createHTMLDocument in case DOMParser is not available */\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createHTMLDocument('');\n        var _doc = doc,\n            body = _doc.body;\n\n        body.parentNode.removeChild(body.parentNode.firstElementChild);\n        body.outerHTML = dirtyPayload;\n      }\n\n      if (dirty && leadingWhitespace) {\n        doc.body.insertBefore(document.createTextNode(leadingWhitespace), doc.body.childNodes[0] || null);\n      }\n\n      /* Work on whole document or just its body */\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    };\n\n    /* Here we test for a broken feature in Edge that might cause mXSS */\n    if (DOMPurify.isSupported) {\n      (function () {\n        try {\n          var doc = _initDocument('<x/><title>&lt;/title&gt;&lt;img&gt;');\n          if (regExpTest(/<\\/title/, doc.querySelector('title').innerHTML)) {\n            removeTitle = true;\n          }\n        } catch (_) {}\n      })();\n    }\n\n    /**\n     * _createIterator\n     *\n     * @param  {Document} root document/fragment to create iterator for\n     * @return {Iterator} iterator instance\n     */\n    var _createIterator = function _createIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root, NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, function () {\n        return NodeFilter.FILTER_ACCEPT;\n      }, false);\n    };\n\n    /**\n     * _isClobbered\n     *\n     * @param  {Node} elm element to check for clobbering attacks\n     * @return {Boolean} true if clobbered, false if safe\n     */\n    var _isClobbered = function _isClobbered(elm) {\n      if (elm instanceof Text || elm instanceof Comment) {\n        return false;\n      }\n\n      if (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string') {\n        return true;\n      }\n\n      return false;\n    };\n\n    /**\n     * _isNode\n     *\n     * @param  {Node} obj object to check whether it's a DOM node\n     * @return {Boolean} true is object is a DOM node\n     */\n    var _isNode = function _isNode(object) {\n      return (typeof Node === 'undefined' ? 'undefined' : _typeof(Node)) === 'object' ? object instanceof Node : object && (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n    };\n\n    /**\n     * _executeHook\n     * Execute user configurable hooks\n     *\n     * @param  {String} entryPoint  Name of the hook's entry point\n     * @param  {Node} currentNode node to work on with the hook\n     * @param  {Object} data additional hook parameters\n     */\n    var _executeHook = function _executeHook(entryPoint, currentNode, data) {\n      if (!hooks[entryPoint]) {\n        return;\n      }\n\n      arrayForEach(hooks[entryPoint], function (hook) {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    };\n\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     *\n     * @param   {Node} currentNode to check for permission to exist\n     * @return  {Boolean} true if node was killed, false if left alive\n     */\n    // eslint-disable-next-line complexity\n    var _sanitizeElements = function _sanitizeElements(currentNode) {\n      var content = void 0;\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeElements', currentNode, null);\n\n      /* Check if element is clobbered or can clobber */\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Now let's check the element's type and name */\n      var tagName = stringToLowerCase(currentNode.nodeName);\n\n      /* Execute a hook if present */\n      _executeHook('uponSanitizeElement', currentNode, {\n        tagName: tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n\n      /* Take care of an mXSS pattern using p, br inside svg, math */\n      if ((tagName === 'svg' || tagName === 'math') && currentNode.querySelectorAll('p, br').length !== 0) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove element if anything forbids its presence */\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Keep content except for bad-listed elements */\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName] && typeof currentNode.insertAdjacentHTML === 'function') {\n          try {\n            var htmlToInsert = currentNode.innerHTML;\n            currentNode.insertAdjacentHTML('AfterEnd', trustedTypesPolicy ? trustedTypesPolicy.createHTML(htmlToInsert) : htmlToInsert);\n          } catch (_) {}\n        }\n\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Remove in case a noscript/noembed XSS is suspected */\n      if (tagName === 'noscript' && regExpTest(/<\\/noscript/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      if (tagName === 'noembed' && regExpTest(/<\\/noembed/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n        return true;\n      }\n\n      /* Convert markup to cover jQuery behavior */\n      if (SAFE_FOR_JQUERY && !currentNode.firstElementChild && (!currentNode.content || !currentNode.content.firstElementChild) && regExpTest(/</g, currentNode.textContent)) {\n        arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n        if (currentNode.innerHTML) {\n          currentNode.innerHTML = stringReplace(currentNode.innerHTML, /</g, '&lt;');\n        } else {\n          currentNode.innerHTML = stringReplace(currentNode.textContent, /</g, '&lt;');\n        }\n      }\n\n      /* Sanitize element content to be template-safe */\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        content = stringReplace(content, MUSTACHE_EXPR$$1, ' ');\n        content = stringReplace(content, ERB_EXPR$$1, ' ');\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, { element: currentNode.cloneNode() });\n          currentNode.textContent = content;\n        }\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeElements', currentNode, null);\n\n      return false;\n    };\n\n    /**\n     * _isValidAttribute\n     *\n     * @param  {string} lcTag Lowercase tag name of containing element.\n     * @param  {string} lcName Lowercase attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\n     */\n    // eslint-disable-next-line complexity\n    var _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n        return false;\n      }\n\n      /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */\n      if (ALLOW_DATA_ATTR && regExpTest(DATA_ATTR$$1, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$$1, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        return false;\n\n        /* Check value is safe. First, is attr inert? If so, is safe */\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$$1, stringReplace(value, ATTR_WHITESPACE$$1, ''))) ; else if (!value) ; else {\n        return false;\n      }\n\n      return true;\n    };\n\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param  {Node} currentNode to sanitize\n     */\n    // eslint-disable-next-line complexity\n    var _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      var attr = void 0;\n      var value = void 0;\n      var lcName = void 0;\n      var idAttr = void 0;\n      var l = void 0;\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n      var attributes = currentNode.attributes;\n\n      /* Check if we have attributes; if not we might have a text node */\n\n      if (!attributes) {\n        return;\n      }\n\n      var hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR\n      };\n      l = attributes.length;\n\n      /* Go backwards over all attributes; safely remove bad ones */\n      while (l--) {\n        attr = attributes[l];\n        var _attr = attr,\n            name = _attr.name,\n            namespaceURI = _attr.namespaceURI;\n\n        value = stringTrim(attr.value);\n        lcName = stringToLowerCase(name);\n\n        /* Execute a hook if present */\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n        value = hookEvent.attrValue;\n        /* Did the hooks approve of the attribute? */\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n\n        /* Remove attribute */\n        // Safari (iOS + Mac), last tested v8.0.5, crashes if you try to\n        // remove a \"name\" attribute from an <img> tag that has an \"id\"\n        // attribute at the time.\n        if (lcName === 'name' && currentNode.nodeName === 'IMG' && attributes.id) {\n          idAttr = attributes.id;\n          attributes = arraySlice(attributes, []);\n          _removeAttribute('id', currentNode);\n          _removeAttribute(name, currentNode);\n          if (arrayIndexOf(attributes, idAttr) > l) {\n            currentNode.setAttribute('id', idAttr.value);\n          }\n        } else if (\n        // This works around a bug in Safari, where input[type=file]\n        // cannot be dynamically set after type has been removed\n        currentNode.nodeName === 'INPUT' && lcName === 'type' && value === 'file' && hookEvent.keepAttr && (ALLOWED_ATTR[lcName] || !FORBID_ATTR[lcName])) {\n          continue;\n        } else {\n          // This avoids a crash in Safari v9.0 with double-ids.\n          // The trick is to first set the id to be empty and then to\n          // remove the attribute\n          if (name === 'id') {\n            currentNode.setAttribute(name, '');\n          }\n\n          _removeAttribute(name, currentNode);\n        }\n\n        /* Did the hooks approve of the attribute? */\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n\n        /* Work around a security issue in jQuery 3.0 */\n        if (SAFE_FOR_JQUERY && regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n\n        /* Take care of an mXSS pattern using namespace switches */\n        if (regExpTest(/svg|math/i, currentNode.namespaceURI) && regExpTest(regExpCreate('</(' + arrayJoin(objectKeys(FORBID_CONTENTS), '|') + ')', 'i'), value)) {\n          _removeAttribute(name, currentNode);\n          continue;\n        }\n\n        /* Sanitize attribute content to be template-safe */\n        if (SAFE_FOR_TEMPLATES) {\n          value = stringReplace(value, MUSTACHE_EXPR$$1, ' ');\n          value = stringReplace(value, ERB_EXPR$$1, ' ');\n        }\n\n        /* Is `value` valid for this attribute? */\n        var lcTag = currentNode.nodeName.toLowerCase();\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n\n        /* Handle invalid data-* attribute set by try-catching it */\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n\n          arrayPop(DOMPurify.removed);\n        } catch (_) {}\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param  {DocumentFragment} fragment to iterate over recursively\n     */\n    var _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      var shadowNode = void 0;\n      var shadowIterator = _createIterator(fragment);\n\n      /* Execute a hook if present */\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(shadowNode)) {\n          continue;\n        }\n\n        /* Deep shadow DOM detected */\n        if (shadowNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(shadowNode);\n      }\n\n      /* Execute a hook if present */\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n\n    /**\n     * Sanitize\n     * Public method providing core sanitation functionality\n     *\n     * @param {String|Node} dirty string or DOM node\n     * @param {Object} configuration object\n     */\n    // eslint-disable-next-line complexity\n    DOMPurify.sanitize = function (dirty, cfg) {\n      var body = void 0;\n      var importedNode = void 0;\n      var currentNode = void 0;\n      var oldNode = void 0;\n      var returnNode = void 0;\n      /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */\n      if (!dirty) {\n        dirty = '<!-->';\n      }\n\n      /* Stringify, in case dirty is an object */\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        // eslint-disable-next-line no-negated-condition\n        if (typeof dirty.toString !== 'function') {\n          throw typeErrorCreate('toString is not a function');\n        } else {\n          dirty = dirty.toString();\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        }\n      }\n\n      /* Check we can run. Otherwise fall back or ignore */\n      if (!DOMPurify.isSupported) {\n        if (_typeof(window.toStaticHTML) === 'object' || typeof window.toStaticHTML === 'function') {\n          if (typeof dirty === 'string') {\n            return window.toStaticHTML(dirty);\n          }\n\n          if (_isNode(dirty)) {\n            return window.toStaticHTML(dirty.outerHTML);\n          }\n        }\n\n        return dirty;\n      }\n\n      /* Assign config vars */\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n\n      /* Clean up removed elements */\n      DOMPurify.removed = [];\n\n      /* Check if dirty is correctly typed for IN_PLACE */\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n\n      if (IN_PLACE) ; else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */\n        body = _initDocument('<!-->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n        if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n        // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n\n        /* Initialize the document to work on */\n        body = _initDocument(dirty);\n\n        /* Check we have a DOM node from the data */\n        if (!body) {\n          return RETURN_DOM ? null : emptyHTML;\n        }\n      }\n\n      /* Remove first element node (ours) if FORCE_BODY is set */\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n\n      /* Get node iterator */\n      var nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n\n      /* Now start iterating over the created document */\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Fix IE's strange behavior with manipulated textNodes #89 */\n        if (currentNode.nodeType === 3 && currentNode === oldNode) {\n          continue;\n        }\n\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(currentNode)) {\n          continue;\n        }\n\n        /* Shadow DOM detected, sanitize it */\n        if (currentNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(currentNode.content);\n        }\n\n        /* Check attributes, sanitize if necessary */\n        _sanitizeAttributes(currentNode);\n\n        oldNode = currentNode;\n      }\n\n      oldNode = null;\n\n      /* If we sanitized `dirty` in-place, return it. */\n      if (IN_PLACE) {\n        return dirty;\n      }\n\n      /* Return sanitized string or DOM */\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n\n        if (RETURN_DOM_IMPORT) {\n          /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n\n        return returnNode;\n      }\n\n      var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n\n      /* Sanitize final string template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$$1, ' ');\n        serializedHTML = stringReplace(serializedHTML, ERB_EXPR$$1, ' ');\n      }\n\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n\n    /**\n     * Public method to set the configuration once\n     * setConfig\n     *\n     * @param {Object} cfg configuration object\n     */\n    DOMPurify.setConfig = function (cfg) {\n      _parseConfig(cfg);\n      SET_CONFIG = true;\n    };\n\n    /**\n     * Public method to remove the configuration\n     * clearConfig\n     *\n     */\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n\n    /**\n     * Public method to check if an attribute value is valid.\n     * Uses last set config, if any. Otherwise, uses config defaults.\n     * isValidAttribute\n     *\n     * @param  {string} tag Tag name of containing element.\n     * @param  {string} attr Attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n     */\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n\n      var lcTag = stringToLowerCase(tag);\n      var lcName = stringToLowerCase(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n\n    /**\n     * AddHook\n     * Public method to add DOMPurify hooks\n     *\n     * @param {String} entryPoint entry point for the hook to add\n     * @param {Function} hookFunction function to execute\n     */\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n\n      hooks[entryPoint] = hooks[entryPoint] || [];\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n\n    /**\n     * RemoveHook\n     * Public method to remove a DOMPurify hook at a given entryPoint\n     * (pops it from the stack of hooks if more are present)\n     *\n     * @param {String} entryPoint entry point for the hook to remove\n     */\n    DOMPurify.removeHook = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        arrayPop(hooks[entryPoint]);\n      }\n    };\n\n    /**\n     * RemoveHooks\n     * Public method to remove all DOMPurify hooks at a given entryPoint\n     *\n     * @param  {String} entryPoint entry point for the hooks to remove\n     */\n    DOMPurify.removeHooks = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        hooks[entryPoint] = [];\n      }\n    };\n\n    /**\n     * RemoveAllHooks\n     * Public method to remove all DOMPurify hooks\n     *\n     */\n    DOMPurify.removeAllHooks = function () {\n      hooks = {};\n    };\n\n    return DOMPurify;\n  }\n\n  var purify = createDOMPurify();\n\n  return purify;\n\n}));\n//# sourceMappingURL=purify.js.map\n"],"sourceRoot":""}