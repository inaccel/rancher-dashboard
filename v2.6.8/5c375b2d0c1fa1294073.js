(window.webpackJsonp=window.webpackJsonp||[]).push([[79,21],{1583:function(n,e,r){"use strict";r.r(e);var t=r(7),o=(r(2),r(3),r(4),r(5),r(26),r(22),r(62),r(37),r(32)),d=r(74),l=r(0),c=r(14),m=r(102),A=r(1036),f=r(40),$={name:"SupportBundle",components:{LabeledInput:c.a,GraphCircle:A.a,AsyncButton:m.b,Banner:f.a},data:function(){return{url:"",description:"",errors:[]}},computed:{bundlePending:function(){return this.$store.getters["harvester-common/isBundlePending"]},isShowBundleModal:function(){return this.$store.getters["harvester-common/isShowBundleModal"]},percentage:function(){return this.$store.getters["harvester-common/getBundlePercentage"]}},watch:{isShowBundleModal:{handler:function(n){var e=this;n?this.$nextTick((function(){e.$modal.show("bundle-modal")})):(this.$modal.hide("bundle-modal"),this.url="",this.description="")},immediate:!0}},methods:{stringify:d.d,close:function(){this.$store.commit("harvester-common/toggleBundleModal",!1),this.backUpName=""},save:function(n){var e=this;return Object(t.a)(regeneratorRuntime.mark((function r(){var t,c,m,A,f;return regeneratorRuntime.wrap((function(r){for(;;)switch(r.prev=r.next){case 0:return e.errors=[],t="bundle-".concat(Object(o.r)(5).toLowerCase()),c="harvester-system",m={apiVersion:"harvesterhci.io/v1beta1",type:l.o.SUPPORT_BUNDLE,kind:"SupportBundle",metadata:{name:t,namespace:c},spec:{issueURL:e.url,description:e.description}},A=e.$store.getters.currentProduct.inStore,r.next=7,e.$store.dispatch("".concat(A,"/create"),m);case 7:return f=r.sent,r.prev=8,r.next=11,f.save();case 11:e.$store.commit("harvester-common/setLatestBundleId","".concat(c,"/").concat(t),{root:!0}),e.$store.dispatch("harvester-common/bundleProgress",{root:!0}),r.next=19;break;case 15:r.prev=15,r.t0=r.catch(8),e.errors=Object(d.c)(r.t0),n(!1);case 19:case"end":return r.stop()}}),r,null,[[8,15]])})))()}}},h=(r(2711),r(1)),component=Object(h.a)($,(function(){var n=this,e=n.$createElement,r=n._self._c||e;return r("div",{staticClass:"bundleModal"},[r("modal",{staticClass:"remove-modal support-modal",attrs:{name:"bundle-modal","click-to-close":!1,width:550,height:390}},[r("div",{staticClass:"p-20"},[r("h2",[n._v("\n        "+n._s(n.t("harvester.modal.bundle.title"))+"\n      ")]),n._v(" "),n.bundlePending?r("div",{staticClass:"content"},[r("div",{staticClass:"circle"},[r("GraphCircle",{attrs:{"primary-stroke-color":"green","secondary-stroke-color":"white","stroke-width":6,percentage:n.percentage,"show-text":!0}})],1)]):r("div",{staticClass:"content"},[r("LabeledInput",{staticClass:"mb-20",attrs:{label:n.t("harvester.modal.bundle.url")},model:{value:n.url,callback:function(e){n.url=e},expression:"url"}}),n._v(" "),r("LabeledInput",{attrs:{label:n.t("harvester.modal.bundle.description"),type:"multiline","min-height":120,required:""},model:{value:n.description,callback:function(e){n.description=e},expression:"description"}})],1),n._v(" "),n._l(n.errors,(function(e,t){return r("div",{key:t},[r("Banner",{attrs:{color:"error",label:n.stringify(e)}})],1)})),n._v(" "),r("div",{staticClass:"footer mt-20"},[r("button",{staticClass:"btn btn-sm role-secondary mr-10",on:{click:n.close}},[n._v("\n          "+n._s(n.t("generic.close"))+"\n        ")]),n._v(" "),r("AsyncButton",{staticClass:"btn btn-sm bg-primary",attrs:{type:"submit",mode:"generate",disabled:n.bundlePending},on:{click:n.save}})],1)],2)])],1)}),[],!1,null,"51cef42d",null);e.default=component.exports},2692:function(n,e,r){var content=r(2712);content.__esModule&&(content=content.default),"string"==typeof content&&(content=[[n.i,content,""]]),content.locals&&(n.exports=content.locals);(0,r(20).default)("20cc6302",content,!0,{sourceMap:!0})},2711:function(n,e,r){"use strict";r(2692)},2712:function(n,e,r){var t=r(19)(!0);t.push([n.i,'.clearfix[data-v-51cef42d]:after,.clearfix[data-v-51cef42d]:before{content:" ";display:table}.clearfix[data-v-51cef42d]:after{clear:both}.list-unstyled[data-v-51cef42d]{margin:0;padding:0;list-style-type:none}.no-select[data-v-51cef42d]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.no-resize[data-v-51cef42d]{resize:none}.hand[data-v-51cef42d]{cursor:pointer;cursor:hand}.fixed[data-v-51cef42d]{table-layout:fixed}.clip[data-v-51cef42d]{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.clip[data-v-51cef42d],.force-wrap[data-v-51cef42d]{word-wrap:break-word}.force-wrap[data-v-51cef42d]{white-space:normal}.bordered-section[data-v-51cef42d]{border-bottom:1px solid var(--border);margin-bottom:20px;padding-bottom:20px}.section-divider[data-v-51cef42d]{margin-bottom:20px;margin-top:20px}.bundleModal .support-modal[data-v-51cef42d]{border-radius:var(--border-radius);max-height:100vh}.bundleModal .bundle[data-v-51cef42d]{cursor:pointer;color:var(--primary)}.bundleModal .icon-spinner[data-v-51cef42d]{font-size:100px}.bundleModal .content[data-v-51cef42d]{height:218px}.bundleModal .content .circle[data-v-51cef42d]{padding-top:20px;height:160px}.bundleModal div[data-v-51cef42d]{line-height:normal}.bundleModal .footer[data-v-51cef42d]{display:flex;justify-content:center}',"",{version:3,sources:["webpack://shell/components/dialog/harvester/SupportBundle.vue"],names:[],mappings:"AAyME,mEAEE,WAAA,CACA,aAAA,CAEF,iCACE,UAAA,CAsDJ,gCAjDE,QAAA,CACA,SAAA,CACA,oBAAA,CAgDF,4BA5CE,wBAAA,CACA,qBAAA,CACA,oBAAA,CACA,gBAAA,CA0CF,4BAtCE,WAAA,CAuCF,uBAnCE,cAAA,CACA,WAAA,CAmCF,wBA/BE,kBAAA,CAgCF,uBA5BE,sBAAA,CACA,eAAA,CACA,kBACA,CA0BF,oDA1BE,oBAKA,CAqBF,6BArBE,kBAAA,CAsBF,mCAlBE,qCAAA,CACA,kBAAA,CACA,mBAAA,CAiBF,kCAbE,kBAAA,CACA,eAAA,CA+RA,6CACE,kCAAA,CACA,gBAAA,CAGF,sCACE,cAAA,CACA,oBAAA,CAGF,4CACE,eAAA,CAGF,uCACE,YAAA,CAEA,+CACE,gBAAA,CACA,YAAA,CAIJ,kCACE,kBAAA,CAGF,sCACE,YAAA,CACA,sBAAA",sourcesContent:["$header-font: 'Poppins', sans-serif;\n$body-font: 'Nunito Sans', arial, helvetica, sans-serif;\n$mono-font: 'Anonymous Pro', monospace;\n\n$max-width: 1440px !default;\n$min-width: 75% !default;\n$input-height: 61px;\n$unlabeled-input-height: 40px;\n\n$input-padding-lg: 18px;\n$input-padding-sm: 10px;\n$input-line-height: 18px;\n\n$column-gutter: 1.75%;\n\n$sideways-tabs-width: 200px;\n\n$array-list-remove-margin: 75px;\n\n$z-indexes: (\n  zero: 0,\n  default: 1,\n  overContent: 2,\n  hoverOverContent: 3,\n\n  mainHeader: 12,\n\n  tableGroup: 10,\n  fixedTableHeader: 11,\n\n  modalOverlay: 20,\n  modalContent: 21,\n\n  tooltip: 30,\n\n  dropdownOverlay: 40,\n  dropdownContent: 41,\n\n  loadingOverlay: 50,\n  loadingContent: 51\n);\n\n// Usage Example:\n// @media only screen and (min-width: map-get($breakpoints, '--viewport-*')) {\n// }\n$breakpoints: (\n  '--viewport-4':  480px, // Phone\n  '--viewport-7':  768px, // Tablet\n  '--viewport-9':  992px, // Laptop/Desktop\n  '--viewport-12': 1281px, // Desktop\n);\n\n$font-size-h2: 21px;\n\n/*\n * Global spacing variables\n */\n$space-s: 10px;\n$space-m: 20px;\n$space-l: 40px;\n///Computes the \"brightness\" of a color\n@use \"sass:math\";\n\n@function brightness($color) {\n  @if type-of($color) == color {\n    @return math.div(red($color) * 0.299 + green($color) * 0.587 + blue($color) * 0.114, 255) * 100%;\n  }\n  @else {\n    @return unquote(\"brightness(#{$color})\");\n  }\n}\n\n\n///Select the more readable foreground color for a given background color.\n@function contrast-color($color, $dark: $contrasted-dark, $light: $contrasted-light) {\n  @if $color == null {\n    @return null;\n  }\n  @else {\n    $color-brightness: brightness($color);\n    $dark-text-brightness: brightness($dark);\n    $light-text-brightness: brightness($light);\n    @return if(abs($color-brightness - $light-text-brightness) > abs($color-brightness - $dark-text-brightness), $light, $dark);\n  }\n}\n\n@function add-z-index($key, $value) {\n  @return map-merge($z-indexes, ($key: $value));\n}\n\n@function z-index($key) {\n  @if map-has-key($z-indexes, $key) {\n    @return map-get($z-indexes, $key);\n  }\n\n  @warn \"Unknown key `#{$key}` in $z-indexes\";\n  @return null;\n}\n\n// _decimal.scss | MIT License | gist.github.com/terkel/4373420\n\n// Round a number to specified digits.\n//\n// @param  {Number} $number A number to round\n// @param  {Number} [$digits:0] Digits to output\n// @param  {String} [$mode:round] (round|ceil|floor) How to round a number\n// @return {Number} A rounded number\n// @example\n//     decimal-round(0.333)    => 0\n//     decimal-round(0.333, 1) => 0.3\n//     decimal-round(0.333, 2) => 0.33\n//     decimal-round(0.666)    => 1\n//     decimal-round(0.666, 1) => 0.7\n//     decimal-round(0.666, 2) => 0.67\n//\n@function decimal-round ($number, $digits: 0, $mode: round) {\n  $n: 1;\n  // $number must be a number\n  @if type-of($number) != number {\n      @warn '#{ $number } is not a number.';\n      @return $number;\n  }\n  // $digits must be a unitless number\n  @if type-of($digits) != number {\n      @warn '#{ $digits } is not a number.';\n      @return $number;\n  } @else if not unitless($digits) {\n      @warn '#{ $digits } has a unit.';\n      @return $number;\n  }\n  @for $i from 1 through $digits {\n      $n: $n * 10;\n  }\n  @if $mode == round {\n      @return math.div(round($number * $n), $n);\n  } @else if $mode == ceil {\n      @return math.div(ceil($number * $n), $n);\n  } @else if $mode == floor {\n      @return math.div(floor($number * $n), $n);\n  } @else {\n      @warn '#{ $mode } is undefined keyword.';\n      @return $number;\n  }\n}\n\n// Ceil a number to specified digits.\n//\n// @param  {Number} $number A number to round\n// @param  {Number} [$digits:0] Digits to output\n// @return {Number} A ceiled number\n// @example\n//     decimal-ceil(0.333)    => 1\n//     decimal-ceil(0.333, 1) => 0.4\n//     decimal-ceil(0.333, 2) => 0.34\n//     decimal-ceil(0.666)    => 1\n//     decimal-ceil(0.666, 1) => 0.7\n//     decimal-ceil(0.666, 2) => 0.67\n//\n@function decimal-ceil ($number, $digits: 0) {\n  @return decimal-round($number, $digits, ceil);\n}\n\n// Floor a number to specified digits.\n//\n// @param  {Number} $number A number to round\n// @param  {Number} [$digits:0] Digits to output\n// @return {Number} A floored number\n// @example\n//     decimal-floor(0.333)    => 0\n//     decimal-floor(0.333, 1) => 0.3\n//     decimal-floor(0.333, 2) => 0.33\n//     decimal-floor(0.666)    => 0\n//     decimal-floor(0.666, 1) => 0.6\n//     decimal-floor(0.666, 2) => 0.66\n//\n@function decimal-floor ($number, $digits: 0) {\n  @return decimal-round($number, $digits, floor);\n}\n\n@function sizzle-gradient($color) {\n  $angle: 135deg;\n  $startPos: 0%;\n  $start: 0.3;\n  $middlePos: 110px;\n  $middle: 0.1;\n  $endPos: 100%;\n  $end: 0;\n\n  @return transparent linear-gradient(#{$angle},\n      #{rgba($color, $start)} #{$startPos},\n      #{rgba($color, $middle)} #{$middlePos},\n      #{rgba($color, $end)} #{$endPos}\n  ) 0% 0% no-repeat padding-box;\n}\n\n// -----------------------------------------------------------------------------\n// This file contains all application-wide Sass mixins.\n// -----------------------------------------------------------------------------\n\n/// Clear inner floats\n@mixin clearfix() {\n  &:before,\n  &:after {\n    content: \" \"; // 1\n    display: table; // 2\n  }\n  &:after {\n    clear: both;\n  }\n}\n\n@mixin list-unstyled {\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n}\n\n@mixin no-select {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n@mixin no-resize {\n  resize : none;\n}\n\n@mixin hand {\n  cursor : pointer;\n  cursor : hand;\n}\n\n@mixin fixed {\n  table-layout : fixed;\n}\n\n@mixin clip {\n  text-overflow : ellipsis;\n  overflow      : hidden;\n  white-space   : nowrap;\n  word-wrap     : break-word;\n}\n\n@mixin force-wrap {\n  word-wrap : break-word;\n  white-space: normal;\n}\n\n@mixin bordered-section {\n  border-bottom: 1px solid var(--border);\n  margin-bottom: 20px;\n  padding-bottom: 20px;\n}\n\n@mixin section-divider {\n  margin-bottom: 20px;\n  margin-top: 20px;\n}\n\n.clearfix         { @include clearfix; }\n.list-unstyled    { @include list-unstyled }\n.no-select        { @include no-select }\n.no-resize        { @include no-resize }\n.hand             { @include hand }\n.fixed            { @include fixed }\n.clip             { @include clip }\n.force-wrap       { @include force-wrap }\n.bordered-section { @include bordered-section }\n.section-divider  { @include section-divider }\n\n/// Sets the specified background color and calculates a dark or light contrasted text color.\n@mixin contrasted($background-color, $dark: $contrasted-dark, $light: $contrasted-light) {\n  color: contrast-color($background-color, $dark, $light);\n\n  &:hover {\n    text-decoration: underline;\n    color: var(--body-text);\n  }\n}\n\n/// Sets base color and darkens bg on hover\n@mixin bg-lighten($bg) {\n  background: $bg;\n  * {\n    background:lighten($bg,20%);\n  }\n}\n\n@mixin link-color($color, $hover) {\n  @if not($hover) {\n    $hover: $color;\n  }\n\n  color: $color;\n\n  &:hover\n   {\n    text-decoration: underline;\n    color: $hover;\n  }\n}\n\n@mixin icon-rotate($degrees, $rotation) {\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation});\n  -webkit-transform: rotate($degrees);\n      -ms-transform: rotate($degrees);\n          transform: rotate($degrees);\n}\n\n@mixin icon-flip($horiz, $vert, $rotation) {\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation});\n  -webkit-transform: scale($horiz, $vert);\n      -ms-transform: scale($horiz, $vert);\n          transform: scale($horiz, $vert);\n}\n\n@mixin input-status-color {\n  &, &.focused {\n    &.success {\n      border: solid 1px var(--success);\n      input, .selected {\n        color: var(--success);\n      }\n\n      .vs__actions:after {\n        color: var(--success);\n      }\n    }\n\n    &.warning {\n      border: solid 1px var(--warning);\n      input, .selected {\n        color: var(--warning);\n      }\n\n      .vs__actions:after {\n        color: var(--warning);\n      }\n    }\n\n    &.error {\n      border: solid 1px var(--error);\n\n      > label {\n        color: var(--error);\n      }\n\n      .vs__actions:after {\n        color: var(--error);\n      }\n    }\n  }\n}\n\n@mixin form-focus {\n  // Focus for form like elements (not to be confused with basic :focus style)\n  outline: none;\n  border-color: var(--outline);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.bundleModal {\n  .support-modal {\n    border-radius: var(--border-radius);\n    max-height: 100vh;\n  }\n\n  .bundle {\n    cursor: pointer;\n    color: var(--primary);\n  }\n\n  .icon-spinner {\n    font-size: 100px;\n  }\n\n  .content {\n    height: 218px;\n\n    .circle {\n      padding-top: 20px;\n      height: 160px;\n    }\n  }\n\n  div {\n    line-height: normal;\n  }\n\n  .footer {\n    display: flex;\n    justify-content: center;\n  }\n}\n"],sourceRoot:""}]),n.exports=t},2789:function(n,e,r){var content=r(2976);content.__esModule&&(content=content.default),"string"==typeof content&&(content=[[n.i,content,""]]),content.locals&&(n.exports=content.locals);(0,r(20).default)("17d724f9",content,!0,{sourceMap:!0})},2975:function(n,e,r){"use strict";r(2789)},2976:function(n,e,r){var t=r(19)(!0);t.push([n.i,'.clearfix[data-v-8771f570]:after,.clearfix[data-v-8771f570]:before{content:" ";display:table}.clearfix[data-v-8771f570]:after{clear:both}.list-unstyled[data-v-8771f570]{margin:0;padding:0;list-style-type:none}.no-select[data-v-8771f570]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.no-resize[data-v-8771f570]{resize:none}.hand[data-v-8771f570]{cursor:pointer;cursor:hand}.fixed[data-v-8771f570]{table-layout:fixed}.clip[data-v-8771f570]{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.clip[data-v-8771f570],.force-wrap[data-v-8771f570]{word-wrap:break-word}.force-wrap[data-v-8771f570]{white-space:normal}.bordered-section[data-v-8771f570]{border-bottom:1px solid var(--border);margin-bottom:20px;padding-bottom:20px}.section-divider[data-v-8771f570]{margin-bottom:20px;margin-top:20px}.content[data-v-8771f570]{display:grid;grid-column-gap:20px;grid-row-gap:20px;grid-template-columns:70% 30%}.only-community[data-v-8771f570]{display:grid;grid-template-columns:100%}.community[data-v-8771f570]{border-left:1px solid var(--border);padding-left:20px}.community>h2[data-v-8771f570]{font-size:18px;font-weight:300;margin-bottom:20px}.community .support-link[data-v-8771f570]{margin:10px 0}.box[data-v-8771f570]{padding:20px;border:1px solid var(--border)}.box.box-primary[data-v-8771f570]{border-color:var(--primary)}.box>h2[data-v-8771f570]{font-size:20px;font-weight:300}.box>div[data-v-8771f570]{font-weight:300;line-height:18px;opacity:.8}.role-secondary[data-v-8771f570]:focus{background-color:transparent}',"",{version:3,sources:["webpack://shell/pages/c/_cluster/harvester/support/index.vue"],names:[],mappings:"AAyME,mEAEE,WAAA,CACA,aAAA,CAEF,iCACE,UAAA,CAsDJ,gCAjDE,QAAA,CACA,SAAA,CACA,oBAAA,CAgDF,4BA5CE,wBAAA,CACA,qBAAA,CACA,oBAAA,CACA,gBAAA,CA0CF,4BAtCE,WAAA,CAuCF,uBAnCE,cAAA,CACA,WAAA,CAmCF,wBA/BE,kBAAA,CAgCF,uBA5BE,sBAAA,CACA,eAAA,CACA,kBACA,CA0BF,oDA1BE,oBAKA,CAqBF,6BArBE,kBAAA,CAsBF,mCAlBE,qCAAA,CACA,kBAAA,CACA,mBAAA,CAiBF,kCAbE,kBAAA,CACA,eAAA,CA8MF,0BACE,YAAA,CACA,oBAAA,CACA,iBAAA,CACA,6BAAA,CAGF,iCACE,YAAA,CACA,0BAAA,CAGF,4BACE,mCAAA,CACA,iBAAA,CACA,+BACE,cAAA,CACA,eAAA,CACA,kBAAA,CAEF,0CACE,aAAA,CAIJ,sBACE,YAAA,CACA,8BAAA,CAEA,kCACE,2BAAA,CAGF,yBACE,cAAA,CACA,eAAA,CAGF,0BACE,eAAA,CACA,gBAAA,CACA,UAAA,CAKF,uCACE,4BAAA",sourcesContent:["$header-font: 'Poppins', sans-serif;\n$body-font: 'Nunito Sans', arial, helvetica, sans-serif;\n$mono-font: 'Anonymous Pro', monospace;\n\n$max-width: 1440px !default;\n$min-width: 75% !default;\n$input-height: 61px;\n$unlabeled-input-height: 40px;\n\n$input-padding-lg: 18px;\n$input-padding-sm: 10px;\n$input-line-height: 18px;\n\n$column-gutter: 1.75%;\n\n$sideways-tabs-width: 200px;\n\n$array-list-remove-margin: 75px;\n\n$z-indexes: (\n  zero: 0,\n  default: 1,\n  overContent: 2,\n  hoverOverContent: 3,\n\n  mainHeader: 12,\n\n  tableGroup: 10,\n  fixedTableHeader: 11,\n\n  modalOverlay: 20,\n  modalContent: 21,\n\n  tooltip: 30,\n\n  dropdownOverlay: 40,\n  dropdownContent: 41,\n\n  loadingOverlay: 50,\n  loadingContent: 51\n);\n\n// Usage Example:\n// @media only screen and (min-width: map-get($breakpoints, '--viewport-*')) {\n// }\n$breakpoints: (\n  '--viewport-4':  480px, // Phone\n  '--viewport-7':  768px, // Tablet\n  '--viewport-9':  992px, // Laptop/Desktop\n  '--viewport-12': 1281px, // Desktop\n);\n\n$font-size-h2: 21px;\n\n/*\n * Global spacing variables\n */\n$space-s: 10px;\n$space-m: 20px;\n$space-l: 40px;\n///Computes the \"brightness\" of a color\n@use \"sass:math\";\n\n@function brightness($color) {\n  @if type-of($color) == color {\n    @return math.div(red($color) * 0.299 + green($color) * 0.587 + blue($color) * 0.114, 255) * 100%;\n  }\n  @else {\n    @return unquote(\"brightness(#{$color})\");\n  }\n}\n\n\n///Select the more readable foreground color for a given background color.\n@function contrast-color($color, $dark: $contrasted-dark, $light: $contrasted-light) {\n  @if $color == null {\n    @return null;\n  }\n  @else {\n    $color-brightness: brightness($color);\n    $dark-text-brightness: brightness($dark);\n    $light-text-brightness: brightness($light);\n    @return if(abs($color-brightness - $light-text-brightness) > abs($color-brightness - $dark-text-brightness), $light, $dark);\n  }\n}\n\n@function add-z-index($key, $value) {\n  @return map-merge($z-indexes, ($key: $value));\n}\n\n@function z-index($key) {\n  @if map-has-key($z-indexes, $key) {\n    @return map-get($z-indexes, $key);\n  }\n\n  @warn \"Unknown key `#{$key}` in $z-indexes\";\n  @return null;\n}\n\n// _decimal.scss | MIT License | gist.github.com/terkel/4373420\n\n// Round a number to specified digits.\n//\n// @param  {Number} $number A number to round\n// @param  {Number} [$digits:0] Digits to output\n// @param  {String} [$mode:round] (round|ceil|floor) How to round a number\n// @return {Number} A rounded number\n// @example\n//     decimal-round(0.333)    => 0\n//     decimal-round(0.333, 1) => 0.3\n//     decimal-round(0.333, 2) => 0.33\n//     decimal-round(0.666)    => 1\n//     decimal-round(0.666, 1) => 0.7\n//     decimal-round(0.666, 2) => 0.67\n//\n@function decimal-round ($number, $digits: 0, $mode: round) {\n  $n: 1;\n  // $number must be a number\n  @if type-of($number) != number {\n      @warn '#{ $number } is not a number.';\n      @return $number;\n  }\n  // $digits must be a unitless number\n  @if type-of($digits) != number {\n      @warn '#{ $digits } is not a number.';\n      @return $number;\n  } @else if not unitless($digits) {\n      @warn '#{ $digits } has a unit.';\n      @return $number;\n  }\n  @for $i from 1 through $digits {\n      $n: $n * 10;\n  }\n  @if $mode == round {\n      @return math.div(round($number * $n), $n);\n  } @else if $mode == ceil {\n      @return math.div(ceil($number * $n), $n);\n  } @else if $mode == floor {\n      @return math.div(floor($number * $n), $n);\n  } @else {\n      @warn '#{ $mode } is undefined keyword.';\n      @return $number;\n  }\n}\n\n// Ceil a number to specified digits.\n//\n// @param  {Number} $number A number to round\n// @param  {Number} [$digits:0] Digits to output\n// @return {Number} A ceiled number\n// @example\n//     decimal-ceil(0.333)    => 1\n//     decimal-ceil(0.333, 1) => 0.4\n//     decimal-ceil(0.333, 2) => 0.34\n//     decimal-ceil(0.666)    => 1\n//     decimal-ceil(0.666, 1) => 0.7\n//     decimal-ceil(0.666, 2) => 0.67\n//\n@function decimal-ceil ($number, $digits: 0) {\n  @return decimal-round($number, $digits, ceil);\n}\n\n// Floor a number to specified digits.\n//\n// @param  {Number} $number A number to round\n// @param  {Number} [$digits:0] Digits to output\n// @return {Number} A floored number\n// @example\n//     decimal-floor(0.333)    => 0\n//     decimal-floor(0.333, 1) => 0.3\n//     decimal-floor(0.333, 2) => 0.33\n//     decimal-floor(0.666)    => 0\n//     decimal-floor(0.666, 1) => 0.6\n//     decimal-floor(0.666, 2) => 0.66\n//\n@function decimal-floor ($number, $digits: 0) {\n  @return decimal-round($number, $digits, floor);\n}\n\n@function sizzle-gradient($color) {\n  $angle: 135deg;\n  $startPos: 0%;\n  $start: 0.3;\n  $middlePos: 110px;\n  $middle: 0.1;\n  $endPos: 100%;\n  $end: 0;\n\n  @return transparent linear-gradient(#{$angle},\n      #{rgba($color, $start)} #{$startPos},\n      #{rgba($color, $middle)} #{$middlePos},\n      #{rgba($color, $end)} #{$endPos}\n  ) 0% 0% no-repeat padding-box;\n}\n\n// -----------------------------------------------------------------------------\n// This file contains all application-wide Sass mixins.\n// -----------------------------------------------------------------------------\n\n/// Clear inner floats\n@mixin clearfix() {\n  &:before,\n  &:after {\n    content: \" \"; // 1\n    display: table; // 2\n  }\n  &:after {\n    clear: both;\n  }\n}\n\n@mixin list-unstyled {\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n}\n\n@mixin no-select {\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n@mixin no-resize {\n  resize : none;\n}\n\n@mixin hand {\n  cursor : pointer;\n  cursor : hand;\n}\n\n@mixin fixed {\n  table-layout : fixed;\n}\n\n@mixin clip {\n  text-overflow : ellipsis;\n  overflow      : hidden;\n  white-space   : nowrap;\n  word-wrap     : break-word;\n}\n\n@mixin force-wrap {\n  word-wrap : break-word;\n  white-space: normal;\n}\n\n@mixin bordered-section {\n  border-bottom: 1px solid var(--border);\n  margin-bottom: 20px;\n  padding-bottom: 20px;\n}\n\n@mixin section-divider {\n  margin-bottom: 20px;\n  margin-top: 20px;\n}\n\n.clearfix         { @include clearfix; }\n.list-unstyled    { @include list-unstyled }\n.no-select        { @include no-select }\n.no-resize        { @include no-resize }\n.hand             { @include hand }\n.fixed            { @include fixed }\n.clip             { @include clip }\n.force-wrap       { @include force-wrap }\n.bordered-section { @include bordered-section }\n.section-divider  { @include section-divider }\n\n/// Sets the specified background color and calculates a dark or light contrasted text color.\n@mixin contrasted($background-color, $dark: $contrasted-dark, $light: $contrasted-light) {\n  color: contrast-color($background-color, $dark, $light);\n\n  &:hover {\n    text-decoration: underline;\n    color: var(--body-text);\n  }\n}\n\n/// Sets base color and darkens bg on hover\n@mixin bg-lighten($bg) {\n  background: $bg;\n  * {\n    background:lighten($bg,20%);\n  }\n}\n\n@mixin link-color($color, $hover) {\n  @if not($hover) {\n    $hover: $color;\n  }\n\n  color: $color;\n\n  &:hover\n   {\n    text-decoration: underline;\n    color: $hover;\n  }\n}\n\n@mixin icon-rotate($degrees, $rotation) {\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation});\n  -webkit-transform: rotate($degrees);\n      -ms-transform: rotate($degrees);\n          transform: rotate($degrees);\n}\n\n@mixin icon-flip($horiz, $vert, $rotation) {\n  filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=#{$rotation});\n  -webkit-transform: scale($horiz, $vert);\n      -ms-transform: scale($horiz, $vert);\n          transform: scale($horiz, $vert);\n}\n\n@mixin input-status-color {\n  &, &.focused {\n    &.success {\n      border: solid 1px var(--success);\n      input, .selected {\n        color: var(--success);\n      }\n\n      .vs__actions:after {\n        color: var(--success);\n      }\n    }\n\n    &.warning {\n      border: solid 1px var(--warning);\n      input, .selected {\n        color: var(--warning);\n      }\n\n      .vs__actions:after {\n        color: var(--warning);\n      }\n    }\n\n    &.error {\n      border: solid 1px var(--error);\n\n      > label {\n        color: var(--error);\n      }\n\n      .vs__actions:after {\n        color: var(--error);\n      }\n    }\n  }\n}\n\n@mixin form-focus {\n  // Focus for form like elements (not to be confused with basic :focus style)\n  outline: none;\n  border-color: var(--outline);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.content {\n  display: grid;\n  grid-column-gap: 20px;\n  grid-row-gap: 20px;\n  grid-template-columns: 70% 30%;\n}\n\n.only-community {\n  display: grid;\n  grid-template-columns: 100%;\n}\n\n.community {\n  border-left: 1px solid var(--border);\n  padding-left: 20px;\n  > h2 {\n    font-size: 18px;\n    font-weight: 300;\n    margin-bottom: 20px;\n  }\n  .support-link {\n    margin: 10px 0;\n  }\n}\n\n.box {\n  padding: 20px;\n  border: 1px solid var(--border);\n\n  &.box-primary {\n    border-color: var(--primary);\n  }\n\n  > h2 {\n    font-size: 20px;\n    font-weight: 300;\n  }\n\n  > div {\n    font-weight: 300;\n    line-height: 18px;\n    opacity: 0.8;\n  }\n}\n\n.role-secondary {\n  &:focus {\n    background-color: transparent;\n  }\n}\n"],sourceRoot:""}]),n.exports=t},3203:function(n,e,r){"use strict";r.r(e);r(21),r(22),r(16),r(10),r(35),r(18),r(36);var t=r(6),o=(r(2),r(3),r(4),r(5),r(31)),d=r(2723),l=r(1018),c=r(1583),m=r(2724),A=r(0);function f(object,n){var e=Object.keys(object);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(object);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(object,n).enumerable}))),e.push.apply(e,r)}return e}function $(n){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?f(Object(source),!0).forEach((function(e){Object(t.a)(n,e,source[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(source)):f(Object(source)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(source,e))}))}return n}var h={layout:"home",components:{BannerGraphic:d.a,IndentedPanel:l.a,CommunityLinks:m.a,SupportBundle:c.default},data:function(){return{options:{"footer.docs":"https://docs.harvesterhci.io/latest/","footer.forums":"https://forums.rancher.com/c/harvester/","footer.slack":"https://slack.rancher.io","footer.issue":"https://github.com/harvester/harvester/issues/new/choose"}}},computed:$($({},Object(o.b)(["currentCluster"])),{},{title:function(){return"harvester.support.title"},showSupportBundle:function(){var n=this.$store.getters.currentProduct.inStore;return!!this.$store.getters["".concat(n,"/byId")](A.K,A.o.SUPPORT_BUNDLE)}}),methods:{open:function(){this.$store.commit("harvester-common/toggleBundleModal",!0)}}},v=(r(2975),r(1)),component=Object(v.a)(h,(function(){var n=this,e=n.$createElement,r=n._self._c||e;return r("div",[r("BannerGraphic",{attrs:{title:n.t(n.title,{},!0)}}),n._v(" "),r("IndentedPanel",[r("div",{staticClass:"content mt-20"},[r("div",{staticClass:"promo"},[n.showSupportBundle?r("div",{staticClass:"box mb-20 box-primary"},[r("h2",[n._v("\n            "+n._s(n.t("harvester.modal.bundle.title"))+"\n          ")]),n._v(" "),r("div",[r("p",{staticClass:"pb-10"},[n._v("\n              "+n._s(n.t("harvester.modal.bundle.titleDescription"))+"\n            ")]),n._v(" "),r("button",{staticClass:"btn role-secondary btn-sm",attrs:{type:"button"},on:{click:n.open}},[n._v("\n              "+n._s(n.t("harvester.modal.bundle.title"))+"\n            ")])])]):n._e(),n._v(" "),r("div",{staticClass:"box mb-20 box-primary"},[r("h2",[n._v("\n            "+n._s(n.t("harvester.support.kubeconfig.title"))+"\n          ")]),n._v(" "),r("div",[r("p",{staticClass:"pb-10"},[n._v("\n              "+n._s(n.t("harvester.support.kubeconfig.titleDescription"))+"\n            ")]),n._v(" "),r("button",{staticClass:"btn role-secondary btn-sm",attrs:{type:"button"},on:{click:function(e){return n.currentCluster.downloadKubeConfig()}}},[n._v("\n              "+n._s(n.t("harvester.support.kubeconfig.title"))+"\n            ")])])])]),n._v(" "),r("div",{staticClass:"community"},[r("CommunityLinks",{attrs:{"link-options":n.options}})],1)])]),n._v(" "),n.showSupportBundle?r("SupportBundle"):n._e()],1)}),[],!1,null,"8771f570",null);e.default=component.exports}}]);
//# sourceMappingURL=5c375b2d0c1fa1294073.js.map