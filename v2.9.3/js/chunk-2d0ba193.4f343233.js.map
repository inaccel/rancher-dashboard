{"version":3,"sources":["webpack:///./shell/pages/auth/verify.vue","webpack:///shell/pages/auth/verify.vue","webpack:///./shell/pages/auth/verify.vue?27a0","webpack:///./shell/pages/auth/verify.vue?fbc9"],"names":["render","_vm","this","_c","_self","staticClass","testing","_v","staticRenderFns","samlProviders","reply","err","code","window","opener","onAuthTest","setTimeout","close","e","isSaml","$route","query","configQuery","get","includes","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","stateStr","_this$$route$query","error","errorDescription","errorCode","errorMsg","out","parsed","_out","_parsed","test","provider","nonce","res","backTo","wrap","_context","prev","next","GITHUB_CODE","GITHUB_NONCE","error_description","$store","getters","concat","$router","replace","escape","abrupt","JSON","parse","base64Decode","t0","console","dispatch","sent","_status","BACK_TO","loadPlugins","app","store","$plugin","t1","stop","data","stateJSON","_unused","_parsed2","mounted","_this$$route$query2","respError","respErrorDescription","component"],"mappings":"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","file":"js/chunk-2d0ba193.4f343233.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('main',{staticClass:\"main-layout\"},[_c('h1',{staticClass:\"text-center mt-50\"},[(_vm.testing)?_c('span',[_vm._v(\"\\n      Testing Configuration…\\n    \")]):_c('span',[_vm._v(\"\\n      Logging In…\\n    \")])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\nimport { GITHUB_CODE, GITHUB_NONCE, BACK_TO } from '@shell/config/query-params';\nimport { get } from '@shell/utils/object';\nimport { base64Decode } from '@shell/utils/crypto';\nimport loadPlugins from '@shell/plugins/plugin';\n\nconst samlProviders = ['ping', 'adfs', 'keycloak', 'okta', 'shibboleth'];\n\nfunction reply(err, code) {\n  try {\n    window.opener.window.onAuthTest(err, code);\n    setTimeout(() => {\n      window.close();\n    }, 250);\n  } catch (e) {\n    window.close();\n  }\n}\n\nfunction isSaml($route) {\n  const { query } = $route;\n  const configQuery = get(query, 'config');\n\n  return samlProviders.includes(configQuery);\n}\n\nexport default {\n  async fetch() {\n    const code = this.$route.query[GITHUB_CODE];\n    const stateStr = this.$route.query[GITHUB_NONCE];\n    const {\n      error, error_description: errorDescription, errorCode, errorMsg\n    } = this.$route.query;\n\n    if (error || errorDescription || errorCode || errorMsg) {\n      let out = errorDescription || error || errorCode;\n\n      if (errorMsg) {\n        out = this.$store.getters['i18n/withFallback'](`login.serverError.${ errorMsg }`, null, errorMsg);\n      }\n\n      this.$router.replace(`/auth/login?err=${ escape(out) }`);\n\n      return;\n    }\n    let parsed;\n\n    try {\n      parsed = JSON.parse(base64Decode((stateStr)));\n    } catch (err) {\n      if (isSaml(this.$route)) {\n        // This is an ok failure. SAML has no state string so a failure is fine (see similar check in mounted).\n        // This whole file could be re-written with that in mind, but this change keeps things simple and fixes a breaking addition\n        return;\n      }\n      const out = this.$store.getters['i18n/t'](`login.error`);\n\n      console.error('Failed to parse nonce', stateStr, err); // eslint-disable-line no-console\n\n      this.$router.replace(`/auth/login?err=${ escape(out) }`);\n\n      return;\n    }\n\n    const { test, provider, nonce } = parsed;\n\n    if (test) {\n      return;\n    }\n\n    try {\n      const res = await this.$store.dispatch('auth/verifyOAuth', {\n        code,\n        nonce,\n        provider\n      });\n\n      if ( res._status === 200) {\n        const backTo = this.$route.query[BACK_TO] || '/';\n\n        // Load plugins\n        await loadPlugins({\n          app:     this.$store.app,\n          store:   this.$store,\n          $plugin: this.$store.$plugin\n        });\n\n        this.$router.replace(backTo);\n      } else {\n        this.$router.replace(`/auth/login?err=${ escape(res) }`);\n      }\n    } catch (err) {\n      this.$router.replace(`/auth/login?err=${ escape(err) }`);\n    }\n  },\n\n  data() {\n    const stateJSON = this.$route.query[GITHUB_NONCE] || '';\n\n    let parsed = {};\n\n    try {\n      parsed = JSON.parse(base64Decode(stateJSON));\n    } catch {\n    }\n\n    const { test } = parsed;\n\n    return { testing: test };\n  },\n\n  mounted() {\n    if ( this.testing ) {\n      try {\n        const {\n          error: respError, error_description: respErrorDescription, [GITHUB_CODE]: code, errorMsg\n        } = this.$route.query;\n\n        let error = respErrorDescription || respError || (!code ? 'No code supplied by auth provider' : null);\n\n        if (errorMsg) {\n          error = this.$store.getters['i18n/withFallback'](`login.serverError.${ errorMsg }`, null, errorMsg);\n        }\n\n        reply(error, code );\n      } catch (e) {\n        window.close();\n      }\n    } else {\n      if ( window.opener ) {\n        if (isSaml(this.$route)) {\n          if ( window.opener.window.onAuthTest ) {\n            reply(null, null);\n          } else {\n            reply({ err: 'failure' });\n          }\n        }\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <main class=\"main-layout\">\n    <h1 class=\"text-center mt-50\">\n      <span v-if=\"testing\">\n        Testing Configuration&hellip;\n      </span>\n      <span v-else>\n        Logging In&hellip;\n      </span>\n    </h1>\n  </main>\n</template>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--16-0!../../../node_modules/babel-loader/lib/index.js??ref--16-1!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./verify.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--16-0!../../../node_modules/babel-loader/lib/index.js??ref--16-1!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./verify.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./verify.vue?vue&type=template&id=6c4a2f74&\"\nimport script from \"./verify.vue?vue&type=script&lang=js&\"\nexport * from \"./verify.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}