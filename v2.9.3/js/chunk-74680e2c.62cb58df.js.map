{"version":3,"sources":["webpack:///./shell/pages/c/_cluster/manager/jwt.authentication/index.vue","webpack:///shell/pages/c/_cluster/manager/jwt.authentication/index.vue","webpack:///./shell/pages/c/_cluster/manager/jwt.authentication/index.vue?6687","webpack:///./shell/pages/c/_cluster/manager/jwt.authentication/index.vue?3264"],"names":["render","_vm","this","_c","_self","$fetchState","pending","attrs","schema","resource","t","scopedSlots","_u","key","fn","proxy","_v","_l","errors","err","i","on","$event","closeError","headers","rows","forceUpdateLiveAndDelayed","useQueryParamsForSimpleFiltering","sortGenerationFn","_ref","row","staticClass","stateBackground","stateLabel","staticRenderFns","name","components","ResourceTable","Loading","Masthead","BadgeState","Banner","TypeDescription","mixins","ResourceFetch","fetch","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","hash","res","wrap","_context","prev","next","mgmtClusters","$fetchType","MANAGEMENT","CLUSTER","proxyConfig","$store","dispatch","type","CLUSTER_PROXY_CONFIG","opt","omitExcludeFields","allHash","sent","clusters","proxyConfigs","stop","data","getters","methods","index","filter","_","base","defaultTableSortGenerationFn","computed","out","_objectSpread","STATE","value","labelKey","sort","search","formatter","AGE","_this2","proxyConfigMap","Map","enableAction","action","allEnabled","anyEnabled","bulkable","enabled","icon","label","invoke","_invoke","_callee2","opts","resources","promises","_context2","forEach","enable","push","Promise","all","t0","exceptionToErrorsArray","_x","_x2","apply","arguments","disableAction","_invoke2","_callee3","_context3","disable","_x3","_x4","config","id","metadata","namespace","set","cluster","clusterName","spec","displayName","_proxyConfigMap$get","_config$metadata","_config$metadata2","_config$metadata2$man","_config$metadata2$man2","get","configName","updatedOn","managedFields","find","field","operation","time","colorForState","STATES_ENUM","ACTIVE","replace","INFO","creationTimestamp","availableActions","_callee4","clusterProxyConfig","_context4","abrupt","save","url","method","_ref2","_callee5","_context5","Date","getTime","component"],"mappings":"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","file":"js/chunk-74680e2c.62cb58df.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.$fetchState.pending)?_c('Loading'):_c('div',[_c('Masthead',{attrs:{\"schema\":_vm.schema,\"resource\":_vm.resource,\"isCreatable\":false,\"type-display\":_vm.t('jwt.title')},scopedSlots:_vm._u([{key:\"typeDescription\",fn:function(){return [_c('TypeDescription',{attrs:{\"resource\":'jwt.authentication'}})]},proxy:true}])}),_vm._v(\" \"),_vm._l((_vm.errors),function(err,i){return _c('Banner',{key:i,attrs:{\"color\":\"error\",\"label\":err,\"closable\":true},on:{\"close\":function($event){return _vm.closeError(i)}}})}),_vm._v(\" \"),_c('ResourceTable',{attrs:{\"schema\":_vm.schema,\"headers\":_vm.headers,\"key-field\":'id',\"namespaced\":false,\"rows\":_vm.rows,\"tableActions\":true,\"force-update-live-and-delayed\":_vm.forceUpdateLiveAndDelayed,\"use-query-params-for-simple-filtering\":_vm.useQueryParamsForSimpleFiltering,\"sort-generation-fn\":_vm.sortGenerationFn,\"data-testid\":\"jwt-authentication-list\"},scopedSlots:_vm._u([{key:\"col:state\",fn:function({row}){return [_c('td',[_c('BadgeState',{staticClass:\"state-bagde\",attrs:{\"color\":row.stateBackground,\"label\":row.stateLabel}})],1)]}}])})],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<script>\nimport { MANAGEMENT } from '@shell/config/types';\nimport { STATE, AGE } from '@shell/config/table-headers';\nimport { STATES_ENUM, colorForState } from '@shell/plugins/dashboard-store/resource-class';\nimport ResourceTable, { defaultTableSortGenerationFn } from '@shell/components/ResourceTable';\nimport Loading from '@shell/components/Loading';\nimport Masthead from '@shell/components/ResourceList/Masthead';\nimport { allHash } from '@shell/utils/promise';\nimport ResourceFetch from '@shell/mixins/resource-fetch';\nimport { BadgeState } from '@components/BadgeState';\nimport TypeDescription from '@shell/components/TypeDescription';\n\nimport { exceptionToErrorsArray } from '@shell/utils/error';\nimport Banner from '@components/Banner/Banner.vue';\n\nexport default {\n  name:       'ClusterProxyConfig',\n  components: {\n    ResourceTable, Loading, Masthead, BadgeState, Banner, TypeDescription\n  },\n  mixins: [ResourceFetch],\n  async fetch() {\n    const hash = {\n      mgmtClusters: this.$fetchType(MANAGEMENT.CLUSTER),\n      proxyConfig:  this.$store.dispatch('management/findAll', { type: MANAGEMENT.CLUSTER_PROXY_CONFIG, opt: { omitExcludeFields: ['metadata.managedFields'] } })\n    };\n\n    const res = await allHash(hash);\n\n    this.clusters = res.mgmtClusters;\n    this.proxyConfigs = res.proxyConfig;\n  },\n\n  data() {\n    return {\n      clusters:                         [],\n      proxyConfigs:                     [],\n      resource:                         MANAGEMENT.CLUSTER_PROXY_CONFIG,\n      schema:                           this.$store.getters['management/schemaFor'](MANAGEMENT.CLUSTER_PROXY_CONFIG),\n      useQueryParamsForSimpleFiltering: false,\n      errors:                           [],\n      forceUpdateLiveAndDelayed:        5\n    };\n  },\n  methods: {\n    closeError(index) {\n      this.errors = this.errors.filter((_, i) => i !== index);\n    },\n    sortGenerationFn() {\n      // This is needed to make sure table gets refreshed when the status changes. Otherwise, it uses cached values.\n      const base = defaultTableSortGenerationFn(this.schema, this.$store);\n\n      return base + this.forceUpdateLiveAndDelayed;\n    },\n  },\n  computed: {\n    headers() {\n      const out = [\n        {\n          ...STATE,\n          value: 'value',\n        },\n        {\n          name:      'clusterName',\n          labelKey:  'jwt.headers.clusterName',\n          value:     'clusterName',\n          sort:      'clusterName',\n          search:    ['clusterName'],\n          formatter: 'LinkDetail'\n        },\n\n        {\n          name:      'updatedOn',\n          labelKey:  'jwt.headers.updatedOn',\n          value:     'updatedOn',\n          sort:      'updatedOn',\n          formatter: 'Date',\n        },\n        {\n          ...AGE,\n          labelKey: 'jwt.headers.clusterAge',\n        },\n      ];\n\n      return out;\n    },\n    rows() {\n      const proxyConfigMap = new Map();\n      const rows = [];\n\n      const enableAction = {\n        action:     'activate',\n        allEnabled: false,\n        anyEnabled: true,\n        bulkable:   true,\n        enabled:    true,\n        icon:       'icon icon-checkmark',\n        label:      this.t('jwt.actions.activate'),\n        invoke:     async(opts, resources) => {\n          const promises = [];\n\n          try {\n            resources.forEach((resource) => {\n              const res = resource.enable();\n\n              promises.push(res);\n            });\n            await Promise.all(promises);\n          } catch (e) {\n            this.errors = exceptionToErrorsArray(e);\n          }\n        }\n      };\n      const disableAction = {\n        action:     'deactivate',\n        allEnabled: false,\n        anyEnabled: true,\n        bulkable:   true,\n        enabled:    true,\n        icon:       'icon icon-x',\n        label:      this.t('jwt.actions.deactivate'),\n        invoke:     async(opts, resources) => {\n          const promises = [];\n\n          try {\n            resources.forEach((resource) => {\n              const res = resource.disable();\n\n              promises.push(res);\n            });\n            await Promise.all(promises);\n          } catch (e) {\n            this.errors = exceptionToErrorsArray(e);\n          }\n        }\n      };\n\n      this.proxyConfigs.forEach((config) => {\n        const id = config.metadata.namespace;\n\n        proxyConfigMap.set(id, { config });\n      });\n\n      this.clusters.forEach((cluster) => {\n        const id = cluster.id;\n        const clusterName = cluster.spec.displayName;\n\n        if (id !== 'local') {\n          const config = proxyConfigMap.get(id)?.config;\n\n          const value = config?.enabled || '';\n          const configName = config?.metadata?.name || '';\n          let updatedOn = '';\n\n          if (value) {\n            updatedOn = config?.metadata?.managedFields?.find((field) => field.operation === 'Update')?.time || '';\n          }\n          const stateBackground = value ? colorForState(STATES_ENUM.ACTIVE).replace('text', 'bg') : colorForState(STATES_ENUM.INFO).replace('text', 'bg');\n          const stateLabel = value ? this.t('jwt.state.enabled') : this.t('jwt.state.disabled');\n          const creationTimestamp = cluster.metadata.creationTimestamp;\n          const availableActions = value ? [disableAction] : [enableAction];\n          const enable = async() => {\n            if (!configName) {\n              const clusterProxyConfig = await this.$store.dispatch('management/create', {\n                enabled:  true,\n                metadata: { namespace: id, name: 'clusterproxyconfig' },\n              });\n\n              return clusterProxyConfig.save({ url: 'v1/management.cattle.io.clusterproxyconfigs', method: 'POST' });\n            } else {\n              config.enabled = true;\n\n              return config.save();\n            }\n          };\n          const disable = async() => {\n            config.enabled = false;\n\n            return config.save();\n          };\n\n          rows.push({\n            id, clusterName, value, stateBackground, stateLabel, creationTimestamp, updatedOn, availableActions, enable, disable\n          });\n        }\n      });\n      this.forceUpdateLiveAndDelayed = new Date().getTime();\n\n      return rows;\n    },\n  },\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else>\n    <Masthead\n      :schema=\"schema\"\n      :resource=\"resource\"\n      :isCreatable=\"false\"\n      :type-display=\"t('jwt.title')\"\n    >\n      <template #typeDescription>\n        <TypeDescription :resource=\"'jwt.authentication'\" />\n      </template>\n    </Masthead>\n\n    <Banner\n      v-for=\"(err, i) in errors\"\n      :key=\"i\"\n      color=\"error\"\n      :label=\"err\"\n      :closable=\"true\"\n      @close=\"closeError(i)\"\n    />\n\n    <ResourceTable\n      :schema=\"schema\"\n      :headers=\"headers\"\n      :key-field=\"'id'\"\n      :namespaced=\"false\"\n      :rows=\"rows\"\n      :tableActions=\"true\"\n      :force-update-live-and-delayed=\"forceUpdateLiveAndDelayed\"\n      :use-query-params-for-simple-filtering=\"useQueryParamsForSimpleFiltering\"\n      :sort-generation-fn=\"sortGenerationFn\"\n      data-testid=\"jwt-authentication-list\"\n    >\n      <template #col:state=\"{row}\">\n        <td>\n          <BadgeState\n            :color=\"row.stateBackground\"\n            :label=\"row.stateLabel\"\n            class=\"state-bagde\"\n          />\n        </td>\n      </template>\n    </ResourceTable>\n  </div>\n</template>\n","import mod from \"-!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--16-0!../../../../../../node_modules/babel-loader/lib/index.js??ref--16-1!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--16-0!../../../../../../node_modules/babel-loader/lib/index.js??ref--16-1!../../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=dc0a4c40&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}